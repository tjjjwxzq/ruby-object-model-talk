<!DOCTYPE html>
	<html class="sl-root decks export offline loaded">
	<head>
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
		<title>All I&#39;d Wanted to Know About Ruby&#39;s Object Model Starting Out...And Moaar!!: Slides</title>
		<meta name="description" content="Slides">

		<link rel="stylesheet" type="text/css" href="lib/offline-v2.css">



	</head>
	<body class="reveal-viewport theme-font-montserrat theme-color-white-blue">
		<div class="reveal">
			<div class="slides">
				<section data-id="fb73f6bfddcc47e393ef044cff641ee4" data-background-color="#ff425f"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 301px; height: auto;" data-block-id="8c9fd2739a44c5eb7fb75584ff959bc3"><div class="sl-block-content" data-placeholder-tag="h1" data-placeholder-text="Title Text" style="z-index: 11; color: rgb(255, 255, 255);">
<h1><span style="font-size:1.4em">hello</span></h1>
</div></div>
</section><section data-id="e02d3c08bfcb6be037f4d28471c612d1"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 263px; height: auto;" data-block-id="bbddf4bb04b5836ebd119e7ec76b114f"><div class="sl-block-content" data-placeholder-tag="h1" data-placeholder-text="Title Text" style="z-index: 10;">
<h1>@tjjjwxzq</h1>
</div></div></section><section data-id="10216a5a6284cac20fab480bba16dade"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 441px; height: 441px; left: 260px; top: 130px;" data-block-id="dd688d49473c8bdb9a5b400c8b9e287c"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="460" data-natural-height="460" data-lazy-loaded="" data-src="deck/8615e7353cda22faf0c527c07606ce44.jpeg"></div></div></section><section data-id="f05c54f063419a45fe1b77c64a63bab6" data-background-color="#ff425f"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 128px; height: auto;" data-block-id="4efa403d724056e753c0dc5a96aca6bc"><div class="sl-block-content" data-placeholder-tag="h1" data-placeholder-text="Title Text" style="z-index: 10;" dir="ui">
<h1>All I'd Wanted to Know About</h1>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 922px; left: 19px; top: 341px;" data-block-id="93f9086ee3ff21a9717368c6dba7b10b"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12; background-color: transparent; color: rgb(255, 255, 255);">
<pre style="text-align:center"><span style="font-size:2.5em"><strong>Ruby's Object Model</strong></span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 453px; height: auto;" data-block-id="2cb293c6623c8f529e0c5d6e8dee9271"><div class="sl-block-content" data-placeholder-tag="h1" data-placeholder-text="Title Text" style="z-index: 13;" dir="ui">
<h1>Starting Out</h1>
</div></div></section><section data-id="de64a327ef16965b034adc2a21769760" data-background-color="#ffffff"><div class="sl-block" data-block-type="text" style="width: 422px; left: 492px; top: 247px; height: auto;" data-block-id="9533124a15cc206d6e39aeaf4b0692a0"><div class="sl-block-content" data-placeholder-tag="h1" data-placeholder-text="Title Text" style="z-index: 11; color: rgb(0, 0, 0); text-align: center;">
<h1 style="text-align: left;">...And</h1>

<h1 style="text-align: left;">Moooarr!!!</h1>
</div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 567px; height: 567px; left: -13px; top: 32px;" data-block-id="688e7b5022ed8745e0d8a304cc2b877c"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="900" data-natural-height="900" data-lazy-loaded="" data-src="deck/6c8a1bdd88b77d9cbc82647f8ba387ce.png"></div></div></section><section data-id="167762402ba75ce91a3f2720703d0ee2"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 560px; height: 560px; left: 200px; top: 42px;" data-block-id="e04f8748045edacd7640825b533c41ba"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/90b4020d81918d67d5181982c3257254.png"></div></div></section><section data-id="31b4eed679ce03a29cf15decfec13102"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 560px; height: 560px; left: 0px; top: 70px;" data-block-id="621763f5665cc81268c2d37636ac1a63"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="900" data-natural-height="900" data-lazy-loaded="" data-src="deck/d1ea8e04fda19fa8daad67199529ed89.png"></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 381px; left: 579px; top: 233px;" data-block-id="aa15ba8a02975482f01ac92d92456762"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12; color: rgb(204, 0, 0);" dir="ui">
<h2 style="text-align:left">YAEYYY</h2>

<h2 style="text-align:left">
<strong>FREE RDRC TICKETS</strong>!!!!!!!</h2>
</div></div></section><section data-id="ebe87ecc37f04201e41cb9e5593ba2f0"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 545px; height: 613px; left: 182px; top: 17px;" data-block-id="15c9ea042622469fa5f09253fff18455"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="900" data-lazy-loaded="" data-src="deck/dc750baf6c7115685ae836e26ca43012.png"></div></div></section><section data-id="1ddcabae469befa176ed570491347216"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 958px; height: 479px; left: 0px; top: 91px;" data-block-id="f03e370bb20acb6aeb5b386d054ab6fc"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="2000" data-natural-height="1000" data-lazy-loaded="" data-src="deck/8fb169197b1db0924f62ee7d632e6850.png"></div></div></section><section data-id="fd1aef7acd31b95c52446050665df8ff"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 665px; height: 619px; left: 148px; top: 11px;" data-block-id="38892387f496d479f5a8ca4203853ba9"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1284" data-natural-height="1196" data-lazy-loaded="" data-src="deck/10679749fc86c3daf1cbee3bc7fad1b2.jpg"></div></div></section><section data-id="1eb9764cb2c9d7143b52464307da7a2e"><div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 717px; height: 391px; left: 122px; top: 155px;" data-block-id="b86746fddfe60920dacaf4966398cae4"><div class="sl-block-content" style="z-index: 11; border-width: 36px; font-size: 160%;" data-highlight-theme="zenburn"><pre class="ruby"><code>stuff = %w(
  breathe read wonder introspect
  learn code write improve marvel
  laugh cry connect love sing draw
  teach create receive give rejoice
  struggle remember forget suffer
  paint wander ramble believe live
)

while 'life' do
  stuff.sample
end
</code></pre></div></div></section><section data-id="ae671a6a6cb3eeb20b0d5e7d32683d8a"><div class="sl-block" data-block-type="code" style="width: 889px; height: 268px; left: 36px; top: 210px;" data-block-id="f813d1b10bc89af4ca194c48274fa438"><div class="sl-block-content" style="z-index: 10; border-width: 36px; font-size: 160%;" data-highlight-theme="zenburn"><pre class="ruby"><code>def turn_your_block_into_a_shiny_proc(&amp;block)
    puts "Did I mention that procs are kinda tricksy?"
    block.call
end

turn_your_block_into_a_shiny_proc do |tricksy|
    puts "I #{tricksy ? "am" : "am not"} tricksy" 
end</code></pre></div></div></section><section data-id="d1b14387cc6705ba0280f66e092931b8"><div class="sl-block" data-block-type="code" style="width: 889px; height: 614px; left: 36px; top: 16px;" data-block-id="59a6518ad32c6568dfa7682b88b1db49"><div class="sl-block-content" style="z-index: 10; border-width: 36px; font-size: 160%;" data-highlight-theme="zenburn"><pre class="ruby"><code>class DangerousThing
    def consume
        [:increase_insurance_premium]
    end
end

class Cupcake &lt; DangerousThing
    include Icing

    def consume
        super + (add_icing &lt;&lt; :lots_of_calories)
    end
end

module Icing
    def add_icing
        [:moar_calories]
    end
end</code></pre></div></div></section><section data-id="ca5ce09bdb732225f51347a836c71a06"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 638px; height: 425px; left: 160px; top: 144px;" data-block-id="e47dcdafe67eda3f5bd6fa2ec738020c"><div class="sl-block-style" style="z-index: 10;"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1200" data-natural-height="800" data-lazy-loaded="" data-src="deck/44bb49761fe228cfb1e531e40cabee9f.png"></div></div></div></section><section data-id="4e6650bb642f2dff543ea896a78e6f18"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 637px; height: 635px; left: 162px; top: -5px;" data-block-id="454387ad88ad7d67e0cb6156bcb0bff0"><div class="sl-block-style" style="z-index: 10;"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1195" data-natural-height="1192" data-lazy-loaded="" data-src="deck/f04ab65345a7d96db1650648ffc9c390.png"></div></div></div></section><section data-id="642724a53757ba6b93d0b9f2731d35cd"><div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 300px; left: -6px; top: 174px;" data-block-id="228f7d75c8a22fdca4709043afd94f21"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12;" data-fragment-index="0">
<pre style="text-align: center;"><strong>singleton 
method</strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 300px; left: -54px; top: 375px;" data-block-id="1fb9420935937bed124a87709ca0ee51"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; color: rgb(255, 66, 95);" data-fragment-index="1">
<pre style="text-align: center;"><strong>metaclass</strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 300px; left: 72px; top: 542px;" data-block-id="42b11050dd5ae843762bb9990fe0c9c1"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14;" data-fragment-index="2">
<pre style="text-align:center"><strong>extend</strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 300px; left: 554px; top: 52px;" data-block-id="6323a018b5efa04dbabec93efcddf338"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 15; color: rgb(255, 66, 95);" dir="ui" data-fragment-index="5"><pre style="text-align:center"><strong>default definee</strong></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 300px; left: 660px; top: 156px;" data-block-id="ac65d324b37e65ba80db7c1e5cad1b09"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 16;" data-fragment-index="4">
<pre style="text-align:center"><strong>eigenclass</strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 211px; left: 720px; top: 312px;" data-block-id="963316772090cefb5cd1a09481a74f20"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 17; color: rgb(255, 66, 95);" dir="ui" data-fragment-index="3">
<pre style="text-align:center"><strong>class instance variables</strong></pre>
</div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 637px; height: 635px; left: 162px; top: -5px;" data-block-id="2e45e9268bb6af9e6f850c96a8cf32ae"><div class="sl-block-style" style="z-index: 10;"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1195" data-natural-height="1192" data-lazy-loaded="" data-src="deck/8f4efda55eb198f4e212654fa842d677.png"></div></div></div></section><section data-id="9a6aaabf973350af3d59673ae418e1c7"><div class="sl-block" data-block-type="text" style="height: auto; width: 300px; left: -6px; top: 174px;" data-block-id="71abba2f5403327cf5eec0a3ff17705b"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12;">
<pre style="text-align: center;"><strong>singleton 
method</strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 300px; left: -54px; top: 375px;" data-block-id="fdbce9461913bf39869ca6a7cd14013b"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; color: rgb(255, 66, 95);">
<pre style="text-align: center;"><strong>metaclass</strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 300px; left: 72px; top: 542px;" data-block-id="35ff690a595d770ef908ce32f0319f5a"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14;">
<pre style="text-align:center"><strong>extend</strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 300px; left: 554px; top: 52px;" data-block-id="35945c36d97731982432abf6513d2fbb"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 15; color: rgb(255, 66, 95);" dir="ui"><pre style="text-align:center"><strong>default definee</strong></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 300px; left: 660px; top: 156px;" data-block-id="ed6e1480fad90879b8c1aaeabcd09e7c"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 16;">
<pre style="text-align:center"><strong>eigenclass</strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 211px; left: 720px; top: 312px;" data-block-id="c353801de763be3935a063f1bb334753"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 17; color: rgb(255, 66, 95);" dir="ui">
<pre style="text-align:center"><strong>class instance variables</strong></pre>
</div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 631px; height: 631px; left: 151px; top: 0px;" data-block-id="cb928f4a6aa11f36e44964b904a4f676"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/41420bb81a68081597570ea3618c021f.png"></div></div></section><section data-id="3cbdcac3dd4557d9f8334f3cae28045e"><div class="sl-block" data-block-type="text" style="height: auto; width: 300px; left: -6px; top: 174px;" data-block-id="1b2c149e253b448439c4b9dd9970fb35"><div class="sl-block-content fragment fade-out" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 11;" data-fragment-index="0">
<pre style="text-align: center;"><strong>singleton 
method</strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 300px; left: -54px; top: 375px;" data-block-id="13b709a4a566fc08da7d009d16124391"><div class="sl-block-content fragment fade-out" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12; color: rgb(255, 66, 95);" data-fragment-index="0">
<pre style="text-align: center;"><strong>metaclass</strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 300px; left: 72px; top: 542px;" data-block-id="2f774516c91a7870d7a56a53ebd33337"><div class="sl-block-content fragment fade-out" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13;" data-fragment-index="0">
<pre style="text-align:center"><strong>extend</strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 300px; left: 554px; top: 52px;" data-block-id="f4155cdf25a2496e4c696dea263db429"><div class="sl-block-content fragment fade-out" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14; color: rgb(255, 66, 95);" dir="ui" data-fragment-index="0"><pre style="text-align:center"><strong>default definee</strong></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 300px; left: 660px; top: 156px;" data-block-id="461ba02519d5ed18ec443ceb7dd65a4a"><div class="sl-block-content fragment fade-out" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 15;" data-fragment-index="0">
<pre style="text-align:center"><strong>eigenclass</strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 211px; left: 720px; top: 312px;" data-block-id="def5027a333122f05e04fb3b497eb6d0"><div class="sl-block-content fragment fade-out" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 16; color: rgb(255, 66, 95);" dir="ui" data-fragment-index="0">
<pre style="text-align:center"><strong>class instance variables</strong></pre>
</div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 635px; height: 635px; left: 149px; top: -2px;" data-block-id="57265e0632a945a3b8c9692b8ee3863f"><div class="sl-block-style" style="z-index: 10;"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/3b871a2e72661583aed90a932dee1955.png"></div></div></div></section><section data-id="ae69a05b197090013c77d37f98fcee04"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 777px; height: 622px; left: 0px; top: 4px;" data-block-id="ee71afb8b317e03d1d0f0ca2084e987f"><div class="sl-block-style" style="z-index: 11;"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/8899d90072427d71aaaba39d5269da98.png"></div></div></div></section><section data-id="b87cb40aa10729c7b2c979d93c198265"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 778px; height: 622px; left: 141px; top: 5px;" data-block-id="d9fd918e68fcf3a7c36a9cef3640a9ac"><div class="sl-block-style" style="z-index: 11;"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/08c41f447f61d115e100e345e016a496.png"></div></div></div></section><section data-id="1b1aede4e749f05128626bc3ca98dc39"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 615px; height: 615px; left: 173px; top: 15px;" data-block-id="79b54304e7540ddf9cab73372b0e5a75"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/fb53c528195f8e4e3fe24f0d4b523109.png"></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 170px; top: 182px;" data-block-id="7c4194d07b434a5619b975bff40543e1"><div class="sl-block-style" style="z-index: 11; transform: rotate(348deg);"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 11; color: rgb(224, 102, 102);" data-fragment-index="0">
<pre><strong>typedef uintptr_t VALUE</strong></pre>
</div></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 352px; top: 490px;" data-block-id="f7c0557b39584d3eface8b1269ac77c3"><div class="sl-block-style" style="z-index: 13; transform: rotate(10deg);"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; color: rgb(224, 102, 102);" dir="ui" data-fragment-index="1"><pre><span style="font-size:0.9em"><strong>#define R_CAST(st) (struct st*)</strong></span></pre></div></div></div></section><section data-id="b9541b2fc2b3145e464f7ad4c2763a07"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 611px; height: 611px; left: 160px; top: 19px;" data-block-id="b9ec58ed0e20b61572501ff0c4178d49"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/5cd559f3fb0a22116ad9884cc56ee5bb.png"></div></div></section><section data-id="6fd6e9b5c6fc1cf89fe1c234743f737c"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 609px; height: 609px; left: 161px; top: 20px;" data-block-id="d3921cce2fc9ec77d89d52d91acf6cdc"><div class="sl-block-style" style="z-index: 11;"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/d9dbc98d5fe89ddfc4d7d7d2b536e3c9.png"></div></div></div></section><section data-id="f2726c7bccc3340aa53f6ad9ef94f94d"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 453px; height: 453px; left: 254px; top: 124px;" data-block-id="b8b79b4954f5cb1d9cbea66e8750fc98"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/5636dc6e8ad5bacd5e8789d15771b855.png"></div></div></section><section data-id="0f40bfb165467b68eff43cccdd2dfc77"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 550px; height: 478px; left: 205px; top: 111px;" data-block-id="46630a3406226b6ce1232209a94030aa"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="689" data-natural-height="599" data-lazy-loaded="" data-src="deck/2ed28fc30df548375d6918fae66a6c4c.png"></div></div></section><section data-id="69509cd814a9c26710bb5d3fd78817da"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 427px; height: 427px; left: 267px; top: 137px;" data-block-id="613382aa81ae7ba7eeac3a5f00128825"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/9580bb27d617d7a8bc6c6d9a80dfa5b8.png"></div></div></section><section data-id="163065a1202621bb5d57406ec0120e09"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 436px; height: 436px; left: 262px; top: 132px;" data-block-id="cf8c3ff1fd130f46b11b5b84d579de2a"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/bdf7be1080a940c3936767cba02a02f7.png"></div></div></section><section data-id="e9529a850b4e622fc44721369c214208"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 454px; height: 454px; left: 253px; top: 114px;" data-block-id="aa23bca5106cee28481d014c869e8809"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/139ba9c79e0faeae5bde7910eef1b543.png"></div></div></section><section data-id="0787a1f2a4475560638cb751bf8a33ee"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 463px; height: 636px; left: 257px; top: 16px;" data-block-id="1d11d1664300a1a2b25eef8f01b94757"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="1100" data-lazy-loaded="" data-src="deck/21e487c6f7a9e992344a6f4d643efd34.png"></div></div></section><section data-id="f844a1e5a0389584bb1f0f64e15a32c2"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 730px; height: 584px; left: 115px; top: 30px;" data-block-id="0fe80749a1b3fdc07bad341982114a6d"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/bb69c76d7b8aa6c7d613bcf08f8faef0.png"></div></div></section><section data-id="3a4770e3cb1851150777f0a80e90340f"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 436px; height: 599px; left: 262px; top: 22px;" data-block-id="2d6dea5eaf211bbfc35709188695c020"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="1100" data-lazy-loaded="" data-src="deck/d656a74c27927dc56a2e44caf75c3ab4.png"></div></div></section><section data-id="05f7888520e9f1beb1009968c279a045" data-background-color="#ff425f"><div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 700px; left: 130px; top: 301px;" data-block-id="2179a401f21167cca00a0913d965886c"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 11; color: rgb(255, 255, 255);">
<h1><strong>INTROSPECTION</strong></h1>
</div></div></section><section data-id="9e567022bc66320d654a63e6e20b7534"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 663px; height: 530px; left: 149px; top: 70px;" data-block-id="da48b1c20cc151c8e5d89bf677314ca4"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/0eb74cae2a5de46af42ecda6d1d1d683.png"></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 302px; height: 168px; left: 640px; top: 368px;" data-block-id="df097e985aaae84e80cfca65a2e1608c"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 12; font-size: 150%;" data-fragment-index="0"><pre class="ruby"><code>class Dog
# ...
end

doge = Dog.new</code></pre></div></div></section><section data-id="5be72ac396a31139ec2669d03ad47419"><div class="sl-block" data-block-type="image" style="width: 663px; height: 530px; left: 149px; top: 70px;" data-block-id="e54030bcd10dbebf69a1173e543d9ed0"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/1e6e004ffc84448b7c8385f1e337501b.png"></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 324px; height: 42px; left: 622px; top: 420px;" data-block-id="a81f72835356e40c52b9d981209fc8c6"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 12; font-size: 150%;" data-fragment-index="0"><pre class="ruby"><code>doge.class </code></pre></div></div></section><section data-id="88fcfb3d4669dc2c710a36932b43d675"><div class="sl-block" data-block-type="image" style="width: 663px; height: 530px; left: 149px; top: 70px;" data-block-id="d9e029ae6c97a89ddc513f0f62f9e450"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/6c097dce8ca33f61aa1aaaa5b05abe66.png"></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 324px; height: 42px; left: 622px; top: 420px;" data-block-id="9e436c5dfd157d504a58fffeadbc5a89"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 12; font-size: 150%;" data-fragment-index="0"><pre class="ruby"><code>doge.class # =&gt; Dog</code></pre></div></div></section><section data-id="b6cc910009784b1008b9dbeb9729e366"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 502px; height: 690px; left: 210px; top: 0px;" data-block-id="ec01fb301529035fe361528ef4d97d1c"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="1100" data-lazy-loaded="" data-src="deck/02b9eeae2762100ad821eca2a824ef07.png"></div></div></section><section data-id="f9be7812d74510dbc85352da149c6bf5"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 678px; height: 542px; left: 142px; top: 44px;" data-block-id="1496558a3f094a9ed49b74630cb1ffa5"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/d4bd8f34a14b58db34912bdefdc10172.png"></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 364px; height: 45px; left: 550px; top: 477px;" data-block-id="c90d39ed09493b23d2aa74851db8e972"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 12; font-size: 150%;" data-fragment-index="0"><pre class="ruby"><code>Dog.class # =&gt; Class</code></pre></div></div></section><section data-id="4a8b6eaa6f798352cf04345c726572ee"><div class="sl-block" data-block-type="image" style="width: 678px; height: 542px; left: 141px; top: 44px;" data-block-id="a9f33cf82849c25b716b0c712caa8422"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/a80db495a28bc28160b1aeee526c22e5.png"></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 424px; height: 45px; left: 521px; top: 477px;" data-block-id="bab6395bbc315edf962c66586bb4b1ac"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 12; font-size: 150%;" data-fragment-index="0"><pre class="ruby"><code>Dog.superclass # =&gt; Object</code></pre></div></div></section><section data-id="af84930feb4206d640b0f198738e6f88"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 501px; height: 689px; left: 210px; top: 1px;" data-block-id="524a2c05f1281e28ce62d3430296125b"><div class="sl-block-style" style="z-index: 11;"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="1100" data-lazy-loaded="" data-src="deck/11005ab351a821153336ef6863c8fb6b.png"></div></div></div></section><section data-id="2ca9bfaf1788612b6d8af1db2bf39bf7"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 259px; height: 259px; left: 0px; top: 218px;" data-block-id="99f111af5bb12cc7e5928ea47ca5d97f"><div class="sl-block-content fragment" style="z-index: 12;" data-fragment-index="0"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/5636dc6e8ad5bacd5e8789d15771b855.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 252px; height: 252px; left: 468px; top: 218px;" data-block-id="2572fad3e593cc8b1bd39aefa114ac56"><div class="sl-block-content fragment" style="z-index: 10;" data-fragment-index="2"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/bdf7be1080a940c3936767cba02a02f7.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 246px; height: 246px; left: 240px; top: 231px;" data-block-id="0a8cc79a6b6d19b2537e8f1c31fb68ba"><div class="sl-block-content fragment" style="z-index: 11;" data-fragment-index="1"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/9580bb27d617d7a8bc6c6d9a80dfa5b8.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 240px; height: 240px; left: 720px; top: 234px;" data-block-id="64471803a51333105489c856ecbd40b2"><div class="sl-block-content fragment" style="z-index: 14;" data-fragment-index="3"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/139ba9c79e0faeae5bde7910eef1b543.png"></div></div></section><section data-id="f8c928488b59e8b97831fdd976f1772f"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 630px; height: 630px; left: 160px; top: 10px;" data-block-id="9f7dcc783348de85d410590af41d6c26"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/77babf95ae40e3af5d7b60a6d575c04a.png"></div></div></section><section data-id="dabfc15e1b6e940d4207587de8d88cdc"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 501px; height: 689px; left: 210px; top: 1px;" data-block-id="1e762bca2f589f2163be008158d019ea"><div class="sl-block-style" style="z-index: 11;"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="1100" data-lazy-loaded="" data-src="deck/11005ab351a821153336ef6863c8fb6b.png"></div></div></div></section><section data-id="d2120a77cb4874c2539082dbcb392918"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 626px; height: 689px; left: 210px; top: 1px;" data-block-id="e22d28c808948e1aa83a068212bedc2e"><div class="sl-block-style" style="z-index: 10;"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1000" data-natural-height="1100" data-lazy-loaded="" data-src="deck/ca6e1b9b693315874e1727673d14d2c1.png"></div></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 356px; height: 94px; left: 11px; top: 226px;" data-block-id="b69c30286e0005c684211bc49a7da4b0"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="ruby"><code>BasicObject.class # =&gt; Class
Object.class # =&gt; Class
Module.class # =&gt; Class
Class.class # =&gt; Class</code></pre></div></div></section><section data-id="ee25b3c13a3974c323e44107d080f39b"><div class="sl-block" data-block-type="image" style="width: 627px; height: 690px; left: 209px; top: 0px;" data-block-id="52a6fc34e6d39328fcad371727767c0e"><div class="sl-block-style" style="z-index: 10;"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1000" data-natural-height="1100" data-lazy-loaded="" data-src="deck/41ee1fc66232156af982c19593b0b0c1.png"></div></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 356px; height: 93px; left: 11px; top: 227px;" data-block-id="86e171d2ccbf80f34c2793002545dcf8"><div class="sl-block-content fragment fade-out" data-highlight-theme="zenburn" style="z-index: 12;" data-fragment-index="0"><pre class="ruby"><code>BasicObject.superclass # =&gt; nil
Object.superclass # =&gt; BasicObject
Module.superclass # =&gt; Object
Class.superclass # =&gt; Module</code></pre></div></div></section><section data-id="201866ade6c92f6bef3da145e9723c7d"><div class="sl-block" data-block-type="image" style="width: 627px; height: 690px; left: 209px; top: 0px;" data-block-id="c95f82aa30c4a0ee91375cf4a699ec22"><div class="sl-block-style" style="z-index: 10;"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1000" data-natural-height="1100" data-lazy-loaded="" data-src="deck/4d1bd67eaae3af158896d82c1ab47829.png"></div></div></div>
<div class="sl-block" data-block-type="code" style="width: 356px; height: 39px; left: 11px; top: 227px;" data-block-id="ae2956aa83ab54df307f5f536763fd17"><div class="sl-block-content fragment fade-out" data-highlight-theme="zenburn" style="z-index: 11;" data-fragment-index="0"><pre class="ruby"><code>Kernel.class # =&gt; Module</code></pre></div></div></section><section data-id="30dc949ce28285a3ab59c16ea606d91b"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 926px; height: 494px; left: 17px; top: 87px;" data-block-id="84c152b9a29b7464547e2baf188b6cf4"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1500" data-natural-height="800" data-lazy-loaded="" data-src="deck/dfd023244a19170a9b76365e7d42a665.png"></div></div></section><section data-id="bb17f0c93adf5d41a0dbbc1a754609f9"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 793px; height: 595px; left: 87px; top: 35px;" data-block-id="581dcd6f98b461ca00558d11e0ef023e"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1200" data-natural-height="900" data-lazy-loaded="" data-src="deck/622798bbbfb558170f8c11819ee523ef.png"></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 462px; height: 88px; left: 471px; top: 602px;" data-block-id="9c66013bb4365fa2895ec1f111c8b07c"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 12;"><pre class="ruby"><code>def doge.speak(word)
    @modifiers |= %w(so very many much such)
    "#{@modifiers.sample} #{word}"
end</code></pre></div></div></section><section data-id="21d08d27673431b670584aaf416ea42f"><div class="sl-block" data-block-type="image" style="width: 793px; height: 595px; left: 87px; top: 35px;" data-block-id="045f719ef7c0b8b310b76c6c8f8f26e0"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1200" data-natural-height="900" data-lazy-loaded="" data-src="deck/2513dec2770d5a6c1636d87e987da927.png"></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 462px; height: 88px; left: 471px; top: 605px;" data-block-id="cd1e58a80e0c0fc4371a1631a547aced"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 12;"><pre class="ruby"><code>def doge.speak(word)
    @modifiers |= %w(so very many much such)
    "#{@modifiers.sample} #{word}"
end</code></pre></div></div></section><section data-id="c058de78d93e1611bce800363138d535"><div class="sl-block" data-block-type="image" style="width: 793px; height: 595px; left: 87px; top: 35px;" data-block-id="109a7495a9ef4dfed304b7caa4c27110"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1200" data-natural-height="900" data-lazy-loaded="" data-src="deck/6549748f33ff65939ec7f082db32a9b8.png"></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 462px; height: 88px; left: 471px; top: 605px;" data-block-id="b1bae22b89e8a0a046f7c2a97026dbda"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 12;"><pre class="ruby"><code>def doge.speak(word)
    @modifiers |= %w(so very many much such)
    "#{@modifiers.sample} #{word}"
end</code></pre></div></div></section><section data-id="a6909bf78e68a55d2880b64edd564e48"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 565px; height: 622px; left: 240px; top: 0px;" data-block-id="2466e2dca665dbae9e0b4d2a36b6b842"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1000" data-natural-height="1100" data-lazy-loaded="" data-src="deck/41ee1fc66232156af982c19593b0b0c1.png"></div></div>
</section><section data-id="6c7739ede35a65b541ff0cdc7f89fe0b"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 566px; height: 623px; left: 240px; top: -1px;" data-block-id="bf37c80aa699fa9b587725721b0af8f1"><div class="sl-block-style" style="z-index: 10;"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1000" data-natural-height="1100" data-lazy-loaded="" data-src="deck/4c999a88ed14ce76b4ab7d9f1984579c.png"></div></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 388px; height: 72px; left: 12px; top: 226px;" data-block-id="5a8e927c6caa0fbee5dd0c3a05c63819"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 12;" data-fragment-index="0"><pre class="ruby"><code>doge.class # =&gt; Dog
doge.singleton_class 
# =&gt; #&lt;Class:#&lt;Dog:0x00000000d3ae50&gt;&gt;
</code></pre></div></div></section><section data-id="45eafd216328299a5475e6e8a688838a"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 900px; height: 619px; left: 66px; top: 0px;" data-block-id="0be6f3be83e67c5aa51561593fb8f208"><div class="sl-block-style" style="z-index: 11;"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/c9adccf2d8bbd5b32bc0a0e961bf023d.png"></div></div></div></section><section data-id="3df21452bbc6a23df1fb85a1d9800e0d"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 791px; height: 593px; left: 85px; top: 23px;" data-block-id="a5b4cbe0263667a0dbc83d69e9abb1fe"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1200" data-natural-height="900" data-lazy-loaded="" data-src="deck/b7ceacaec3c968645e15f48c2cf7d0b0.png"></div></div></section><section data-id="2ed4ca91bffbb68daccfdcad17cc4a8f"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 900px; height: 619px; left: 66px; top: 0px;" data-block-id="dce67f3a66176ca37d64a9fd36e1b1c8"><div class="sl-block-style" style="z-index: 11;"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/c9adccf2d8bbd5b32bc0a0e961bf023d.png"></div></div></div></section><section data-id="a224e72f02f55e5460320df3b6c7df57"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 895px; height: 615px; left: 66px; top: 2px;" data-block-id="38872dfd6d7fc094b2c5d94f5f031044"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/cc8cd3a1972ca613fc5630aad0b27364.png"></div></div></section><section data-id="7e1bc42dac7839cf56c7fa025ad0a0c4"><div class="sl-block" data-block-type="image" style="width: 895px; height: 615px; left: 66px; top: 2px;" data-block-id="1168293b834fd1c4f94d23f2935abc8a"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/f6f138a6b6f8e52f3ffdab95c406b1a6.png"></div></div></section><section data-id="1fee3d72fe28540af1fb16eab4409240"><div class="sl-block" data-block-type="image" style="width: 895px; height: 615px; left: 66px; top: 2px;" data-block-id="4607726bc4a299ea160584566bdfa3c0"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/c2f59cffd3caa468cc8ea5593834ad15.png"></div></div></section><section data-id="11e6734f99230391c97d4dcc4bdbac8b"><div class="sl-block" data-block-type="image" style="width: 895px; height: 615px; left: 66px; top: 2px;" data-block-id="3d4d4a8a4b8859221e01619f3d5e61f9"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/c31bc2ab6a06e90b19fc3315c9378298.png"></div></div></section><section data-id="f9fb070a08277419e5d13983f44c2672"><div class="sl-block" data-block-type="image" style="width: 895px; height: 615px; left: 66px; top: 2px;" data-block-id="13fa4095d2dd9a42299f6b5a18c43730"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/8bb0849aae8aabc4020e108ed9c9151c.png"></div></div></section><section data-id="a9445a52b269aaa492cf99ab9a714bdd"><div class="sl-block" data-block-type="image" style="width: 894px; height: 615px; left: 64px; top: 2px;" data-block-id="2e5bf9950a53efb336bd4042cd8d2a3e"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/b2792e0398251e1d5ad9b2fa9b52b9cf.png"></div></div></section><section data-id="c4911b11ad63e3c18eb6d0e361743e72"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 895px; height: 615px; left: 66px; top: 2px;" data-block-id="1680ffd38433280a3d5f475cdd51cbbf"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/1debd97b37bc326118c465d670da901c.png"></div></div></section><section data-id="f16c19059e37490866f17bdd1bf22b21"><div class="sl-block" data-block-type="image" style="width: 895px; height: 615px; left: 66px; top: 2px;" data-block-id="21ccc6fa8ad43b2bed17ac0272532c63"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/48ab60a99a3a3dc9cd0fa0ab8477ead6.png"></div></div></section><section data-id="5ef08af25bf392d94564c30de9825160"><div class="sl-block" data-block-type="image" style="width: 895px; height: 615px; left: 66px; top: 2px;" data-block-id="2293dee568e542014d52620ae5e51dcf"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/ca4be7330122e22b218635e3c66f50fb.png"></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 712px; left: 158px; top: 261px;" data-block-id="cc8eafc1761f21dbd3834c5069218269"><div class="sl-block-content fragment fade-down" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12;" data-fragment-index="0">
<h1><strong>IT'S OVER 9000!!!!</strong></h1>
</div></div></section><section data-id="d0c404a4d3fe492de0e5062332c10a97"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 771px; height: 617px; left: 0px; top: 13px;" data-block-id="28d07a06f43e253b105653dcc806f7ba"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/cc361a4291ab670d275569d351ab97d2.png"></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 189px; left: 771px; top: 232px;" data-block-id="ee62d4513bc71039ec10fa5bdc17be00"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12;" data-fragment-index="0">
<h1>The End</h1>
</div></div></section><section data-id="0e8a4dcfe5ec43e9d85e11209e67d1e8"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 768px; height: 614px; left: 96px; top: 16px;" data-block-id="6e923202368471e01c674996a7992fe9"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/08c41f447f61d115e100e345e016a496.png"></div></div></section><section data-id="6ee3938f6d81bdeb919407fb9ea75847"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 794px; height: 609px; left: 80px; top: 21px;" data-block-id="af896c255c96294238382067c54a9551"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="622" data-natural-height="477" data-lazy-loaded="" data-src="deck/68cf82e53785a8346b0d74d9f386936d.jpg"></div></div></section><section data-id="4b5648756042c177b32ebaf7156f7e1f"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 610px; height: 610px; left: 175px; top: 20px;" data-block-id="539bab50390381f5441f6b9357b71677"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/1fd4bb4adc5a750e7599ff4af8a4fd0c.png"></div></div></section><section data-id="efd5a3df11b4d6ca72d4febcc3a8ea57"><div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 94px; left: 113px; top: 325px;" data-block-id="a19360f49c0f3a13de10c3926677b776"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 11;">
<pre><span style="font-size:1.4em">obj</span></pre>
</div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 300px; height: 220px; left: 515px; top: 280px;" data-block-id="69a0f50b77eecf4b43225505013d393f"><div class="sl-block-content" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 12;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 300 220"><rect width="300" height="220" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 300px; height: 58px; left: 515px; top: 210px;" data-block-id="7926c5bf8cb9c98bc07c472a22d0a272"><div class="sl-block-content" data-shape-type="rect" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 13;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 300 58"><rect width="300" height="58" class="shape-element" fill="rgb(255, 66, 95)"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 246px; left: 542px; top: 214px;" data-block-id="716f537ed5bcbf06993bfc77af3eebf2"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14; color: rgb(255, 255, 255);">
<pre style="text-align: center;"><span style="font-size:1.4em">struct</span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 251px; left: 542px; top: 300px;" data-block-id="387ea1a0a11f9fdbe31865e0fcefa872"><div class="sl-block-style" style="z-index: 15; transform: rotate(360deg);"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 15;">
<pre><span style="font-size:1.4em">...
members
...
</span></pre>
</div></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 207px; top: 239px;" data-block-id="d4875c9e372deb8af6d9ab23e781f3b1"><div class="sl-block-content" data-line-x1="-173" data-line-y1="100" data-line-x2="135" data-line-y2="-11" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 16;" data-line-width="10px"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="308" height="111" viewbox="-173 -11 308 111"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-173" y1="100" x2="121" y2="-6"></line><line stroke="#000000" stroke-width="10" x1="-173" y1="100" x2="121" y2="-6"></line><polygon fill="#000000" transform="translate(121,-6) rotate(70.181)" points="0,-15 15,15 -15,15"></polygon></svg></div></div></section><section data-id="0da3b98556d315ab3d60d87159dac9cd"><div class="sl-block" data-block-type="text" style="width: 806px; left: 65px; top: 25px; height: auto;" data-block-id="b9dbb943c23c5e2fc5b8e87ea16bc17a"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10;">
<h2>3 structs we care about</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 396px; height: 230px; left: 50px; top: 121px;" data-block-id="c7147190d721e894279baa7d144abac5"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 11;" data-fragment-index="0"><pre class="cpp"><code>struct RObject {
  struct RBasic basic;
  union {
    struct {
      uint32_t numiv;
      VALUE *ivptr;
      void *iv_index_tbl;
    } heap;
    VALUE ary[ROBJECT_EMBED_LEN_MAX];
  } as;
};</code></pre></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 396px; height: 230px; left: 511px; top: 121px;" data-block-id="a6bf6500b575b1cb0c38cd20d79d5ae8"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 12;" data-fragment-index="1"><pre class="cpp"><code>struct RClass {
    struct RBasic basic;
    VALUE super;
    rb_classext_t *ptr;
    struct rb_id_table *m_tbl;
};</code></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 158px; left: 153px; top: 358px;" data-block-id="c1c09d9ca33bd48d160f45d9fcaf889d"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13;" data-fragment-index="0">
<pre style="text-align:center"><span style="font-size:1.2em"><strong>RObject</strong></span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 158px; left: 641px; top: 358px;" data-block-id="8427b3089d2e11351eb2fe833f314eb6"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14;" data-fragment-index="1">
<pre style="text-align: center;"><span style="font-size:1.2em"><strong>RClass</strong></span></pre>
</div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 278px; height: 90px; left: 341px; top: 459px;" data-block-id="04f6f4f64c14e99cf24f3710e8d24b22"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 15;" data-fragment-index="3"><pre class="cpp"><code>struct RBasic {
  VALUE flags;
  const VALUE klass;
}</code></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 158px; left: 402px; top: 560px;" data-block-id="707065d4dbc59fff643c545f0b0eb0a8"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 16; text-align: center;" data-fragment-index="3">
<pre style="text-align: center;"><span style="font-size:1.2em"><strong>RBasic</strong></span></pre>
</div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 217px; height: 30px; left: 65px; top: 140px;" data-block-id="7efd29ed9c31e4305ee07bb43500bb7e"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 17;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 217 30"><defs><clippath id="shape-mask-1-1498041019757"><rect width="217" height="30"></rect></clippath></defs><rect width="217" height="30" clip-path="url(#shape-mask-1-1498041019757)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 217px; height: 30px; left: 542px; top: 140px;" data-block-id="dc78bd1df93fbe0ae0a003fa751684de"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 18;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 217 30"><defs><clippath id="shape-mask-2-1498041019761"><rect width="217" height="30"></rect></clippath></defs><rect width="217" height="30" clip-path="url(#shape-mask-2-1498041019761)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 195px; left: 143px; top: 401px;" data-block-id="8864a40402cfc968c37f1fccc31a6f95"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 19;" data-fragment-index="0">
<pre style="text-align: center;"><span style="font-size:0.5em">(include/ruby/ruby.h)</span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 195px; left: 623px; top: 401px;" data-block-id="6836aaf35eec8b03ee25cbcb35a61067"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 21;" data-fragment-index="1">
<pre style="text-align: center;"><span style="font-size:0.5em">(internal.h)</span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 195px; left: 384px; top: 594px;" data-block-id="b4ddcb1e2b841df97e673fabc13c8ad1"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 22;" data-fragment-index="3">
<pre style="text-align: center;"><span style="font-size:0.5em">(include/ruby/ruby.h)</span></pre>
</div></div></section><section data-id="9f50d1ce0569747dba0adde760a78c9f"><div class="sl-block" data-block-type="text" style="width: 806px; left: 78px; top: 25px; height: auto;" data-block-id="3688412f551059fa1b5e6c63857ef97d"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 11;">
<h2>RBasic</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 349px; height: 140px; left: 51px; top: 280px;" data-block-id="3450e90840e515caebd416a228b7b9f5"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 12; font-size: 150%;"><pre class="cpp"><code>struct RBasic {
  VALUE flags;
  const VALUE klass;
}</code></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 328px; left: 541px; top: 144px;" data-block-id="668f76ea08e7c6d02710ebe709ce0295"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; text-align: center; color: rgb(255, 255, 255);" data-fragment-index="0">
<p style="text-align:left"><strong>Metadata</strong></p>

<ul>
	<li class=""><span style="font-size:0.9em"><em>what type of object? </em>(T_OBJECT, T_CLASS, T_MODULE etc.)</span></li>
	<li><span style="font-size:0.9em"><em>singleton class? </em>(FL_SINGLETON)</span></li>
</ul>
</div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 354px; height: 271px; left: 526px; top: 133px;" data-block-id="5fc08a5e2c7b302bdb10e347d533d461"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 10;" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 354 271"><rect width="354" height="271" class="shape-element" fill="rgb(255, 66, 95)"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 328px; left: 541px; top: 426px;" data-block-id="cbed1d84ee1c7a889f4389e25a3451fd"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 16; text-align: center; color: rgb(0, 0, 0);" data-fragment-index="1">
<p style="text-align:left"><strong>'True' class</strong></p>

<ul>
	<li><span style="font-size:0.9em"><em>pointer to RClass struct</em></span></li>
</ul>
</div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 358px; height: 116px; left: 526px; top: 414px;" data-block-id="6f801893d713b88d26c3b7c890184bbe"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 15;" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 358 116"><rect width="358" height="116" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 284px; top: 159px;" data-block-id="a83da361338778faed8ccbed8e5559e4"><div class="sl-block-content fragment" data-line-x1="-96" data-line-y1="81" data-line-x2="146" data-line-y2="-91" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 17;" data-line-width="5px" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="242" height="172" viewbox="-96 -91 242 172"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-95.5" y1="81.5" x2="140.5" y2="-86.5"></line><line stroke="#000000" stroke-width="5" x1="-95.5" y1="81.5" x2="140.5" y2="-86.5"></line><polygon fill="#000000" transform="translate(140,-87) rotate(54.597)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 362px; top: 363px;" data-block-id="c05a1e4a1db034cdc4631da85321b19c"><div class="sl-block-content fragment" data-line-x1="-33" data-line-y1="98" data-line-x2="131" data-line-y2="178" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 18;" data-line-width="5px" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="164" height="80" viewbox="-33 98 164 80"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-32.5" y1="98.5" x2="124.5" y2="175.5"></line><line stroke="#000000" stroke-width="5" x1="-32.5" y1="98.5" x2="124.5" y2="175.5"></line><polygon fill="#000000" transform="translate(124,175) rotate(116.003)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 190px; height: 33px; left: 80px; top: 313px;" data-block-id="1daf44c91f0cf9ef0018ecdf2dbb3167"><div class="sl-block-content fragment current-visible" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 19;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 190 33"><defs><clippath id="shape-mask-3-1498041019997"><rect width="190" height="33"></rect></clippath></defs><rect width="190" height="33" clip-path="url(#shape-mask-3-1498041019997)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 282px; height: 37px; left: 80px; top: 339px;" data-block-id="4a7967bf2a2513a002d7294cd3545a9f"><div class="sl-block-content fragment current-visible" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 20;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 282 37"><defs><clippath id="shape-mask-4-1498041020006"><rect width="282" height="37"></rect></clippath></defs><rect width="282" height="37" clip-path="url(#shape-mask-4-1498041020006)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div></section><section data-id="a5612c88c87bffa161beb160c4295671"><div class="sl-block" data-block-type="text" style="width: 806px; left: 78px; top: 25px; height: auto;" data-block-id="3c65ea8640ad08d9145099cab3538d92"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10;">
<h2>RObject</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 498px; height: 294px; left: 18px; top: 196px;" data-block-id="9d978f09ed72b72c679dd7f95929b7f1"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11; font-size: 130%;"><pre class="cpp"><code>struct RObject {
  struct RBasic basic;
  union {
    struct {
      uint32_t numiv;
      VALUE *ivptr;
      void *iv_index_tbl;
    } heap;
    VALUE ary[ROBJECT_EMBED_LEN_MAX];
  } as;
};</code></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 284px; left: 339px; top: 105px;" data-block-id="31b2d2d7746c0fd53bf8d923357e56eb"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12;">
<p>RBasic plus stuff</p>
</div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 262px; height: 30px; left: 47px; top: 225px;" data-block-id="a361528d9b7ce81800b0fa157de021cd"><div class="sl-block-content fragment current-visible" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 13;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 262 30"><defs><clippath id="shape-mask-5-1498041020166"><rect width="262" height="30"></rect></clippath></defs><rect width="262" height="30" clip-path="url(#shape-mask-5-1498041020166)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 559px; top: 255px;" data-block-id="413824bd8520f0639071b40a4f22a68e"><div class="sl-block-content fragment" data-line-x1="0" data-line-y1="200" data-line-x2="0" data-line-y2="-11" data-line-color="#000000" data-line-start-type="none" data-line-end-type="none" style="z-index: 14;" data-line-width="9px" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="1" height="211" viewbox="0 -11 1 211"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="0.5" y1="200.5" x2="0.5" y2="-10.5"></line><line stroke="#000000" stroke-width="9" x1="0.5" y1="200.5" x2="0.5" y2="-10.5"></line></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 523px; top: 255px;" data-block-id="773a83fc8d4fce2a64f3601214f62fb6"><div class="sl-block-content fragment" data-line-x1="-56" data-line-y1="-26" data-line-x2="-15" data-line-y2="-26" data-line-color="#000000" data-line-start-type="none" data-line-end-type="none" style="z-index: 17;" data-line-width="9px" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="41" height="1" viewbox="-56 -26 41 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-55.5" y1="-25.5" x2="-14.5" y2="-25.5"></line><line stroke="#000000" stroke-width="9" x1="-55.5" y1="-25.5" x2="-14.5" y2="-25.5"></line></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 522px; top: 461px;" data-block-id="b5fc595daa2965e9ccb5f2f892a4442f"><div class="sl-block-content fragment" data-line-x1="-56" data-line-y1="-26" data-line-x2="-15" data-line-y2="-26" data-line-color="#000000" data-line-start-type="none" data-line-end-type="none" style="z-index: 18;" data-line-width="9px" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="41" height="1" viewbox="-56 -26 41 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-55.5" y1="-25.5" x2="-14.5" y2="-25.5"></line><line stroke="#000000" stroke-width="9" x1="-55.5" y1="-25.5" x2="-14.5" y2="-25.5"></line></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 563px; top: 350px;" data-block-id="c95332e58bd7cd5bfe59fe03f4b8f37f"><div class="sl-block-content fragment" data-line-x1="66" data-line-y1="69" data-line-x2="-11" data-line-y2="69" data-line-color="#000000" data-line-start-type="arrow" data-line-end-type="none" style="z-index: 19;" data-line-width="9px" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="77" height="1" viewbox="-11 69 77 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="53.5" y1="69.5" x2="-10.5" y2="69.5"></line><line stroke="#000000" stroke-width="9" x1="53.5" y1="69.5" x2="-10.5" y2="69.5"></line><polygon fill="#000000" transform="translate(53,69) rotate(270)" points="0,13.5 13.5,-13.5 -13.5,-13.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 282px; left: 660px; top: 256px;" data-block-id="8a02d104f586f951edf390dd97f298ab"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 20; text-align: center; color: rgb(0, 0, 0);" data-fragment-index="1">
<p style="text-align:left"><strong>Instance variables</strong></p>

<ul>
	<li><span style="font-size:0.9em"><em>pointer to the heap</em></span></li>
</ul>

<p><span style="font-size:0.9em"><em>OR</em></span></p>

<ul>
	<li><span style="font-size:0.9em"><em>embedded directly</em></span></li>
</ul>
</div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 299px; height: 216px; left: 651px; top: 245px;" data-block-id="64190135f6dac3c470d729b75fca9b87"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 15;" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 299 216"><rect width="299" height="216" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div></section><section data-id="6e71adc0234d95ad28f46f1e21577a76"><div class="sl-block" data-block-type="text" style="width: 806px; left: 78px; top: 25px; height: auto;" data-block-id="b60e6287d6a0476a21c0b0302cd0f944"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10;">
<h2>RClass</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 491px; height: 199px; left: 19px; top: 254px;" data-block-id="24b1852e420a7a8967a8defc25af0488"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11; font-size: 150%;"><pre class="cpp"><code>struct RClass {
    struct RBasic basic;
    VALUE super;
    rb_classext_t *ptr;
    struct rb_id_table *m_tbl;
};</code></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 846px; left: 47px; top: 99px;" data-block-id="9a2c51fa5a8981897077e7e27703f235"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12;">
<p>Normal objects are stored as RObject, class objects as RClass</p>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 303px; height: 30px; left: 80px; top: 290px;" data-block-id="4d981c303140a0d33912cfa50ed93e30"><div class="sl-block-content fragment current-visible" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 13;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 303 30"><defs><clippath id="shape-mask-6-1498041020359"><rect width="303" height="30"></rect></clippath></defs><rect width="303" height="30" clip-path="url(#shape-mask-6-1498041020359)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 336px; left: 584px; top: 164px;" data-block-id="db80eb1208ac3aeaf5ac6ee6fafc2596"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 17; text-align: center; color: rgb(255, 255, 255);" data-fragment-index="1">
<p style="text-align:left"><strong>'True' superclass</strong></p>

<ul>
	<li><span style="font-size:0.9em"><em>pointer to RClass struct</em></span></li>
</ul>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 361px; height: 109px; left: 571px; top: 157px;" data-block-id="8d105370b1461503ad7d7212157de025"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 14;" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 361 109"><rect width="361" height="109" class="shape-element" fill="rgb(255, 66, 95)"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 187px; height: 30px; left: 80px; top: 320px;" data-block-id="a67c72a07a5f3bef506c0d3f1aee546a"><div class="sl-block-content fragment current-visible" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 19;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 187 30"><defs><clippath id="shape-mask-7-1498041020371"><rect width="187" height="30"></rect></clippath></defs><rect width="187" height="30" clip-path="url(#shape-mask-7-1498041020371)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 291px; height: 30px; left: 80px; top: 350px;" data-block-id="6b100c802240763261732b4d76bf616b"><div class="sl-block-content fragment current-visible" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 20;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 291 30"><defs><clippath id="shape-mask-8-1498041020375"><rect width="291" height="30"></rect></clippath></defs><rect width="291" height="30" clip-path="url(#shape-mask-8-1498041020375)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 400px; height: 30px; left: 80px; top: 380px;" data-block-id="3fc708441b64351cdfc693f50168142b"><div class="sl-block-content fragment current-visible" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 21;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="3"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 400 30"><defs><clippath id="shape-mask-9-1498041020378"><rect width="400" height="30"></rect></clippath></defs><rect width="400" height="30" clip-path="url(#shape-mask-9-1498041020378)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 340px; left: 584px; top: 280px;" data-block-id="12095ab622946e2d11245e4f9ab66b4e"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 22; text-align: center; color: rgb(0, 0, 0);" data-fragment-index="2">
<p style="text-align:left"><strong>Class Extension Struct </strong></p>

<ul>
	<li>class instance variables</li>
	<li>class constants...</li>
</ul>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 361px; height: 186px; left: 571px; top: 272px;" data-block-id="cf1b31a41f7f61585a54129e254cf77f"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 16;" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 361 186"><rect width="361" height="186" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 336px; left: 584px; top: 472px;" data-block-id="0a3cc7a6b55498a7e1a8bcaced67bcfc"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 23; text-align: center; color: rgb(255, 255, 255);" data-fragment-index="3">
<p style="text-align:left"><strong>Method table</strong></p>

<ul>
	<li><span style="font-size:0.9em"><em>store instance methods</em></span></li>
</ul>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 361px; height: 109px; left: 571px; top: 464px;" data-block-id="9c9427e007a24cdc9eb8e952ee47d880"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 15;" data-fragment-index="3"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 361 109"><rect width="361" height="109" class="shape-element" fill="rgb(255, 66, 95)"></rect></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 280px; top: 189px;" data-block-id="ca2bcc1b276e9c92c8ef76a6453cee2d"><div class="sl-block-content fragment" data-line-x1="-100" data-line-y1="85" data-line-x2="191" data-line-y2="-61" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 24;" data-line-width="5px" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="291" height="146" viewbox="-100 -61 291 146"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-99.5" y1="85.5" x2="184.5" y2="-57.5"></line><line stroke="#000000" stroke-width="5" x1="-99.5" y1="85.5" x2="184.5" y2="-57.5"></line><polygon fill="#000000" transform="translate(184,-58) rotate(63.356)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 383px; top: 297px;" data-block-id="fec35ed648ceace78ecaafd15b6750e2"><div class="sl-block-content fragment" data-line-x1="3" data-line-y1="116" data-line-x2="191" data-line-y2="47" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 25;" data-line-width="5px" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="188" height="69" viewbox="3 47 188 69"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="3.5" y1="116.5" x2="184.5" y2="50.5"></line><line stroke="#000000" stroke-width="5" x1="3.5" y1="116.5" x2="184.5" y2="50.5"></line><polygon fill="#000000" transform="translate(184,50) rotate(69.846)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 490px; top: 395px;" data-block-id="961114dde4a44b9968567f94251b0ac5"><div class="sl-block-content fragment" data-line-x1="110" data-line-y1="145" data-line-x2="191" data-line-y2="240" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 26;" data-line-width="5px" data-fragment-index="3"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="81" height="95" viewbox="110 145 81 95"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="110.5" y1="145.5" x2="186.5" y2="234.5"></line><line stroke="#000000" stroke-width="5" x1="110.5" y1="145.5" x2="186.5" y2="234.5"></line><polygon fill="#000000" transform="translate(186,234) rotate(139.548)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div></section><section data-id="d33c640e94ee8f471c392b387a7a1820"><div class="sl-block" data-block-type="text" style="width: 806px; left: 78px; top: 25px; height: auto;" data-block-id="94913f3ce7591c54cad43e6944751b7d"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10;">
<h2>Method Dispatch</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 638px; height: 267px; left: 37px; top: 107px;" data-block-id="61b6976e1a2e10261dc3ef719e5527cd"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="cpp"><code>static inline rb_method_entry_t*
search_method(VALUE klass, ID id, VALUE *defined_class_ptr)
{
    rb_method_entry_t *me;

    for (me = 0; klass; klass = RCLASS_SUPER(klass)) {
	if ((me = lookup_method_table(klass, id)) != 0) break;
    }

    if (defined_class_ptr)
	*defined_class_ptr = klass;
    return me;
}</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 590px; height: 77px; left: 78px; top: 203px;" data-block-id="87a0b01fce1e6cbe764df67c1558795d"><div class="sl-block-content fragment current-visible" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 12;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 590 77"><defs><clippath id="shape-mask-10-1498041020659"><rect width="590" height="77"></rect></clippath></defs><rect width="590" height="77" clip-path="url(#shape-mask-10-1498041020659)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 218px; left: 718px; top: 125px;" data-block-id="87efe84e931d33a3601e9e07bf9f8a76"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14; text-align: center; color: rgb(255, 255, 255);" data-fragment-index="0">
<p>Keep searching method tables of <strong>supers </strong>till we find something</p>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 243px; height: 219px; left: 705px; top: 113px;" data-block-id="4c8f89417b9d043a49e651ea711fd282"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 13;" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 243 219"><rect width="243" height="219" class="shape-element" fill="rgb(255, 66, 95)"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 195px; left: 262px; top: 374px;" data-block-id="3a547e95d71daadab1e6cd67151b8e31"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 15;">
<pre style="text-align:center"><span style="font-size:0.5em">(vm_method.c)</span></pre>
</div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 675px; top: 210px;" data-block-id="753294ba4df3c5e99241a132aaff2e18"><div class="sl-block-content fragment" data-line-x1="295" data-line-y1="-40" data-line-x2="325" data-line-y2="-40" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 16;" data-line-width="5px" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="30" height="1" viewbox="295 -40 30 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="295.5" y1="-39.5" x2="318.5" y2="-39.5"></line><line stroke="#000000" stroke-width="5" x1="295.5" y1="-39.5" x2="318.5" y2="-39.5"></line><polygon fill="#000000" transform="translate(318,-40) rotate(90)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 233px; height: 186px; left: 62px; top: 404px;" data-block-id="d8641878e3f9708b26281a7105d53cce"><div class="sl-block-content fragment" style="z-index: 17;" data-fragment-index="1"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/0eb74cae2a5de46af42ecda6d1d1d683.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 224px; height: 179px; left: 288px; top: 420px;" data-block-id="ae228a0cef2940bc2ab1d1090d2f154a"><div class="sl-block-content fragment" style="z-index: 18;" data-fragment-index="2"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/0d6f4c86915874515ef7207aa0e86b7d.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 170px; height: 170px; left: 512px; top: 429px;" data-block-id="e8141d9b17e14aa95aab91cd3bb53e24"><div class="sl-block-content fragment" style="z-index: 19;" data-fragment-index="3"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/9580bb27d617d7a8bc6c6d9a80dfa5b8.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 143px; height: 179px; left: 737px; top: 429px;" data-block-id="5646e70935d0d9817ab43675dea546a8"><div class="sl-block-content fragment" style="z-index: 20;" data-fragment-index="4"><img style="" data-natural-width="369" data-natural-height="463" data-lazy-loaded="" data-src="deck/284d189effc3ee3276c526f772af858c.png"></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 232px; top: 512px;" data-block-id="890d31f6d0c6fb5efb50a91ee5677154"><div class="sl-block-content fragment" data-line-x1="295" data-line-y1="-40" data-line-x2="358" data-line-y2="-40" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 21;" data-line-width="5px" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="63" height="1" viewbox="295 -40 63 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="295.5" y1="-39.5" x2="351.5" y2="-39.5"></line><line stroke="#000000" stroke-width="5" x1="295.5" y1="-39.5" x2="351.5" y2="-39.5"></line><polygon fill="#000000" transform="translate(351,-40) rotate(90)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 457px; top: 512px;" data-block-id="40bc302ab1a0abfce5f29e8154255633"><div class="sl-block-content fragment" data-line-x1="295" data-line-y1="-40" data-line-x2="365" data-line-y2="-40" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 22;" data-line-width="5px" data-fragment-index="3"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="70" height="1" viewbox="295 -40 70 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="295.5" y1="-39.5" x2="358.5" y2="-39.5"></line><line stroke="#000000" stroke-width="5" x1="295.5" y1="-39.5" x2="358.5" y2="-39.5"></line><polygon fill="#000000" transform="translate(358,-40) rotate(90)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 667px; top: 510px;" data-block-id="d5133f85c2b146c7572ebcac34955db4"><div class="sl-block-content fragment" data-line-x1="295" data-line-y1="-40" data-line-x2="380" data-line-y2="-40" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 23;" data-line-width="5px" data-fragment-index="4"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="85" height="1" viewbox="295 -40 85 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="295.5" y1="-39.5" x2="373.5" y2="-39.5"></line><line stroke="#000000" stroke-width="5" x1="295.5" y1="-39.5" x2="373.5" y2="-39.5"></line><polygon fill="#000000" transform="translate(373,-40) rotate(90)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 116px; height: 30px; left: 102px; top: 590px;" data-block-id="1da01db5b57f8d4c5e140e523b25faec"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 24;" data-fragment-index="1"><pre class="ruby"><code>doge.class</code></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 69px; left: 229px; top: 461px;" data-block-id="4e3c28ab2414471ebb75b6551fb1845a"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 25;" data-fragment-index="2">
<pre><span style="font-size:0.7em">klass</span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 69px; left: 457px; top: 461px;" data-block-id="19286f7fb0b8f553ef5d35ce57daaded"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 26;" data-fragment-index="3">
<pre><span style="font-size:0.7em">super</span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 69px; left: 675px; top: 461px;" data-block-id="39119fe9f2d34bbd7aae21caee7fff63"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 28;" data-fragment-index="4">
<pre><span style="font-size:0.7em">super</span></pre>
</div></div></section><section data-id="585f3ffa5cc72f7146478a414dcea31f"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 266px; height: auto;" data-block-id="fc455ab62846a700dbe82065d5ae7e32"><div class="sl-block-content" data-placeholder-tag="h1" data-placeholder-text="Title Text" style="z-index: 10;">
<h1>Where does it begin?</h1>
</div></div></section><section data-id="3065deadcc1fc0944d95f99d87f951e2"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="e78b383b014131c34b02d7434ab032ac"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10;">
<h2>Bootstrap</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 951px; height: 422px; left: 5px; top: 123px;" data-block-id="c80290a4b908bae3851b0012b8ae066d"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="cpp"><code>void
InitVM_Object(void)
{
    Init_class_hierarchy();

#undef rb_intern
#define rb_intern(str) rb_intern_const(str)

    rb_define_private_method(rb_cBasicObject, "initialize", rb_obj_dummy, 0);
    rb_define_alloc_func(rb_cBasicObject, rb_class_allocate_instance);
    rb_define_method(rb_cBasicObject, "==", rb_obj_equal, 1);
    rb_define_method(rb_cBasicObject, "equal?", rb_obj_equal, 1);
    rb_define_method(rb_cBasicObject, "!", rb_obj_not, 0);
    rb_define_method(rb_cBasicObject, "!=", rb_obj_not_equal, 1);

    rb_define_private_method(rb_cBasicObject, "singleton_method_added", rb_obj_dummy, 1);
    rb_define_private_method(rb_cBasicObject, "singleton_method_removed", rb_obj_dummy, 1);
    rb_define_private_method(rb_cBasicObject, "singleton_method_undefined", rb_obj_dummy, 1);

    // ... really long function ...

</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 244px; height: 30px; left: 43px; top: 183px;" data-block-id="96c88e4da788694ab5c34f3bf267e92b"><div class="sl-block-content fragment current-visible" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 12;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 244 30"><defs><clippath id="shape-mask-11-1498041021418"><rect width="244" height="30"></rect></clippath></defs><rect width="244" height="30" clip-path="url(#shape-mask-11-1498041021418)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 195px; left: 383px; top: 560px;" data-block-id="cec608bbb20b4faa7e4ad9b39fd9d296"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14;">
<pre style="text-align:center"><span style="font-size:0.5em">(object.c)</span></pre>
</div></div></section><section data-id="8cf4d74a82602c5a8747de449617dddc"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="b9da324a5fa691f6aaca165d111b5659"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 12;">
<h2>Bootstrap</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 597px; height: 430px; left: 5px; top: 123px;" data-block-id="f4d4b043e153966508ba607a9b72f65a"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 13;"><pre class="cpp"><code>void
Init_class_hierarchy(void)
{
  rb_cBasicObject = boot_defclass("BasicObject", 0);
  rb_cObject = boot_defclass("Object", rb_cBasicObject);
  rb_gc_register_mark_object(rb_cObject);

  /* resolve class name ASAP for order-independence */
  rb_class_name(rb_cObject);

  rb_cModule = boot_defclass("Module", rb_cObject);
  rb_cClass =  boot_defclass("Class",  rb_cModule);

  rb_const_set(rb_cObject, 
  rb_intern_const("BasicObject"), rb_cBasicObject);
  
  RBASIC_SET_CLASS(rb_cClass, rb_cClass);
  RBASIC_SET_CLASS(rb_cModule, rb_cClass);
  RBASIC_SET_CLASS(rb_cObject, rb_cClass);
  RBASIC_SET_CLASS(rb_cBasicObject, rb_cClass);
}</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 551px; height: 188px; left: 27px; top: 183px;" data-block-id="f25d927f48c5287f8179b8422d77add3"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 14;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 551 188"><defs><clippath id="shape-mask-12-1498041021657"><rect width="551" height="188"></rect></clippath></defs><rect width="551" height="188" clip-path="url(#shape-mask-12-1498041021657)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 195px; left: 206px; top: 553px;" data-block-id="e53be5ccd2d159d4ba72fca39ca84019"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 16;">
<pre style="text-align:center"><span style="font-size:0.5em">(class.c)</span></pre>
</div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 428px; height: 588px; left: 587px; top: 42px;" data-block-id="cc707e0b94427a37e4aff1ce7bb86b12"><div class="sl-block-style" style="z-index: 10;"><div class="sl-block-content fragment" style="z-index: 10;" data-fragment-index="0"><img style="" data-natural-width="800" data-natural-height="1100" data-lazy-loaded="" data-src="deck/126dfbfdd94d53b3e2a5a21f58fba4ce.png"></div></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 427px; height: 587px; left: 587px; top: 42px;" data-block-id="d68a64f0ec7bcbe97b84c92849b1e631"><div class="sl-block-content fragment" style="z-index: 11;" data-fragment-index="1"><img style="" data-natural-width="800" data-natural-height="1100" data-lazy-loaded="" data-src="deck/c7a85ac9e541025e86e1528f5ac60709.png"></div></div>
<div class="sl-block" data-block-type="shape" style="width: 469px; height: 92px; left: 27px; top: 438px;" data-block-id="66210be536e67c1712102998bdade64f"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 17;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 469 92"><defs><clippath id="shape-mask-13-1498041021666"><rect width="469" height="92"></rect></clippath></defs><rect width="469" height="92" clip-path="url(#shape-mask-13-1498041021666)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div></section><section data-id="3b56a6bd8e5fa85e97261a21230f28b7"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 266px; height: auto;" data-block-id="5f519f1364bebc98ca20df934e901794"><div class="sl-block-content" data-placeholder-tag="h1" data-placeholder-text="Title Text" style="z-index: 10;">
<h1>Where's Kernel?</h1>
</div></div></section><section data-id="cdcca2b8ef238cf12807cee44a764334"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="191991512f6455a0092ba35cc4d0c915"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 11;">
<h2>Bootstrap</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 560px; height: 373px; left: 0px; top: 123px;" data-block-id="349245889e7da54fc0f0404b6c4afde9"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 12;"><pre class="cpp"><code>void
InitVM_Object(void)
{
    Init_class_hierarchy();

    // ... bunch of stuff ...

    rb_mKernel = rb_define_module("Kernel");
    rb_include_module(rb_cObject, rb_mKernel);

    // ... really long function ...</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 429px; height: 52px; left: 39px; top: 262px;" data-block-id="edd7f0a16790e4a9661cd03dccbe8bf7"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 13;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 429 52"><defs><clippath id="shape-mask-14-1498041024387"><rect width="429" height="52"></rect></clippath></defs><rect width="429" height="52" clip-path="url(#shape-mask-14-1498041024387)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 195px; left: 188px; top: 496px;" data-block-id="adff3298419c5a76dc5d927ef5d48c4f"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14;">
<pre style="text-align:center"><span style="font-size:0.5em">(object.c)</span></pre>
</div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 438px; height: 602px; left: 547px; top: 28px;" data-block-id="24fe74d7d8903f72139adf33cbf6c653"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="800" data-natural-height="1100" data-lazy-loaded="" data-src="deck/60d8a5cce8ba680da1d54b96f11c1dd9.png"></div></div></section><section data-id="861b1414a91d1399d277a88359ef93c9"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 444px; height: 610px; left: 258px; top: 20px;" data-block-id="45e26de4810aede3e0fd274891e6bc3d"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="1100" data-lazy-loaded="" data-src="deck/32d4a0711a0636987b640cfc0670506a.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 444px; height: 610px; left: 258px; top: 20px;" data-block-id="b1b279ffe0f3b48f7e85a2e17f0821e0"><div class="sl-block-content fragment" style="z-index: 12;" data-fragment-index="0"><img style="" data-natural-width="800" data-natural-height="1100" data-lazy-loaded="" data-src="deck/d656a74c27927dc56a2e44caf75c3ab4.png"></div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 142px; height: 130px; left: 258px; top: 420px;" data-block-id="538298e6f65e897a8ad4a2c7996d3cb5"><div class="sl-block-content fragment" data-shape-type="circle" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 13;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 142 130"><defs><clippath id="shape-mask-15-1498041024541"><ellipse rx="71" ry="65" cx="71" cy="65"></ellipse></clippath></defs><ellipse rx="71" ry="65" cx="71" cy="65" clip-path="url(#shape-mask-15-1498041024541)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></ellipse></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 54px; left: 197px; top: 460px;" data-block-id="a4a4499e25d1ad008776c1e3a2767129"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14; color: rgb(255, 66, 95);" data-fragment-index="1">
<h3>?</h3>
</div></div></section><section data-id="33badf87129fa43968ad521a2b372d20"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="60895edbf3e7eff92d65719b8a79298d"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10;">
<h2>Make me a Dog</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 537px; height: 246px; left: 0px; top: 228px;" data-block-id="81a1d1bd010a82a4b591a90ef43268cd"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="cpp"><code>VALUE
rb_define_class_id(ID id, VALUE super)
{
    VALUE klass;

    if (!super) super = rb_cObject;
    klass = rb_class_new(super);
    rb_make_metaclass(klass, RBASIC(super)-&gt;klass);

    return klass;
}</code></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 195px; left: 160px; top: 474px;" data-block-id="244eb7835131d355c15c893966de389f"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12;">
<pre style="text-align:center"><span style="font-size:0.5em">(class.c)</span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 336px; left: 584px; top: 226px;" data-block-id="23ae4fd6ed367a57478d12243a1927df"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 17; text-align: center; color: rgb(255, 255, 255);" data-fragment-index="0">
<p style="text-align: left;">Default super is <strong>Object</strong></p>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 361px; height: 53px; left: 571px; top: 219px;" data-block-id="ff1002fa9a7bd71900cc1c601067d7c3"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 14;" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 361 53"><rect width="361" height="53" class="shape-element" fill="rgb(255, 66, 95)"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 323px; height: 30px; left: 38px; top: 327px;" data-block-id="f9ecbb181a039bc272d08bb8369a0ce1"><div class="sl-block-content fragment current-visible" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 18;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 323 30"><defs><clippath id="shape-mask-16-1498041024732"><rect width="323" height="30"></rect></clippath></defs><rect width="323" height="30" clip-path="url(#shape-mask-16-1498041024732)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 340px; left: 585px; top: 297px;" data-block-id="fa944fd2cbda0d6ddf5afdc7f0b347f4"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 19; text-align: center; color: rgb(0, 0, 0);" data-fragment-index="1">
<p style="text-align: left;">Create the new RClass struct with given <strong>super</strong></p>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 361px; height: 97px; left: 572px; top: 284px;" data-block-id="7db3730914eea997682b9cf97f984bd9"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 16;" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 361 97"><rect width="361" height="97" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 372px; top: 246px;" data-block-id="d0bcff1d3ef0174684bb108f67220662"><div class="sl-block-content fragment" data-line-x1="-8" data-line-y1="92" data-line-x2="191" data-line-y2="-4" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 20;" data-line-width="5px" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="199" height="96" viewbox="-8 -4 199 96"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-7.5" y1="92.5" x2="184.5" y2="-0.5"></line><line stroke="#000000" stroke-width="5" x1="-7.5" y1="92.5" x2="184.5" y2="-0.5"></line><polygon fill="#000000" transform="translate(184,-1) rotate(64.247)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 323px; height: 25px; left: 38px; top: 350px;" data-block-id="045e9e3aec825dc5410787e7c8872b72"><div class="sl-block-content fragment current-visible" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 21;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 323 25"><defs><clippath id="shape-mask-17-1498041024755"><rect width="323" height="25"></rect></clippath></defs><rect width="323" height="25" clip-path="url(#shape-mask-17-1498041024755)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 372px; top: 310px;" data-block-id="91fb19c53ef7dc58d74ff63b32d2e644"><div class="sl-block-content fragment" data-line-x1="-23" data-line-y1="98" data-line-x2="176" data-line-y2="45" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 22;" data-line-width="5px" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="199" height="53" viewbox="-23 45 199 53"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-22.5" y1="98.5" x2="169.5" y2="47.5"></line><line stroke="#000000" stroke-width="5" x1="-22.5" y1="98.5" x2="169.5" y2="47.5"></line><polygon fill="#000000" transform="translate(169,47) rotate(75.087)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 479px; height: 28px; left: 38px; top: 369px;" data-block-id="b28e93c894f29f55da875be0002df7e3"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 23;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 479 28"><defs><clippath id="shape-mask-18-1498041024767"><rect width="479" height="28"></rect></clippath></defs><rect width="479" height="28" clip-path="url(#shape-mask-18-1498041024767)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 517px; top: 383px;" data-block-id="520c254dfe61e008a8862025fec5c153"><div class="sl-block-content fragment" data-line-x1="107" data-line-y1="103" data-line-x2="161" data-line-y2="140" data-line-color="#000000" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 24;" data-line-width="5px" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="54" height="37" viewbox="107 103 54 37"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="107.5" y1="103.5" x2="155.5" y2="136.5"></line><line stroke="#000000" stroke-width="5" x1="107.5" y1="103.5" x2="155.5" y2="136.5"></line><polygon fill="#000000" transform="translate(155,136) rotate(124.418)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 345px; left: 584px; top: 396px;" data-block-id="6074f309006c0dd5ed8f2ca2133ca961"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 25; text-align: center; color: rgb(255, 255, 255);" data-fragment-index="2">
<p style="text-align: left;">Make and set Dog's <strong>metaclass</strong> straightaway</p>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 361px; height: 93px; left: 574px; top: 389px;" data-block-id="9dfe238d8bdda53ec377a17456140f2e"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 15;" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 361 93"><rect width="361" height="93" class="shape-element" fill="rgb(255, 66, 95)"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 361px; left: 572px; top: 474px;" data-block-id="1e221429f56aed278dc4e744f0801adc"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 26;" data-fragment-index="2">
<p><span style="font-size:0.5em">(ignore the second parameter, it is unused)</span></p>
</div></div></section><section data-id="790900c4655123506adb17018a0e6d29"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 916px; height: 630px; left: 6px; top: 19px;" data-block-id="6885592701c49ac994c753d1e37e8212"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/a2970b23db3cf0b155f652c3e0c0c053.png"></div></div></section><section data-id="6070dfff04462f9a48cf66fb97e0ed49"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="6f0370c2baddb263a7b93ab21e60e485"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10;">
<h2>Terminology...</h2>
</div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 380px; height: 380px; left: 290px; top: 160px;" data-block-id="1b4456f197450ba1ec4f6609c8da03e9"><div class="sl-block-content" data-shape-type="circle" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 11;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 380 380"><ellipse rx="190" ry="190" cx="190" cy="190" class="shape-element" fill="rgb(238, 238, 238)"></ellipse></svg></div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 204px; height: 204px; left: 376px; top: 310px;" data-block-id="8ae38eb9913b98e3cc52df9d2c7b5359"><div class="sl-block-content" data-shape-type="circle" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 12;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 204 204"><ellipse rx="102" ry="102" cx="102" cy="102" class="shape-element" fill="rgb(255, 66, 95)"></ellipse></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 229px; left: 366px; top: 203px;" data-block-id="c4fbd57534933a29e53514074e62d137"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13;">
<p>Singleton class</p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 229px; left: 359px; top: 393px;" data-block-id="8fc1355347ebd714ba37da8cae40ee07"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 15; color: rgb(255, 255, 255);">
<p>Metaclass</p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 229px; left: 366px; top: 241px;" data-block-id="d683ab77bd8dd76ea2ff1e6803f31d1f"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 16;" data-fragment-index="0">
<p>= eigenclass</p>
</div></div></section><section data-id="bfea9d70780f82459447d7bc7fd85c02"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="9bf0aeec73ccca83c3f19d39d2dadfb9"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10;">
<h2>Terminology...</h2>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 180px; top: 161px;" data-block-id="63f7a1c179ccdb79923f6df921a77a57"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 11;">
<p>Metaclasses are also classes, so...</p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 187px; top: 241px;" data-block-id="9fa85abeeb885b26dfa7bf1fa622c376"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12;" data-fragment-index="0">
<p>Metametaclasses</p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 187px; top: 311px;" data-block-id="20e3436618d3919b43daa2fd706b652e"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13;" data-fragment-index="1">
<p>Metametametaclasses</p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 180px; top: 381px;" data-block-id="a28e5e2cf4893d69ad4fc74ff01b1aa1"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14;" data-fragment-index="2">
<p>Metametametametaclasses</p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 180px; top: 451px;" data-block-id="923ebf8446837eb7f76b7e69858e0276"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 16;" data-fragment-index="3">
<p><strong>Meta^(n)classes</strong></p>
</div></div></section><section data-id="31f6a86792f725378255fbf1c62da43f"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 949px; height: 560px; left: 0px; top: 40px;" data-block-id="390d6f35f214ca6b5506f2db80e0db11"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="568" data-natural-height="335" data-lazy-loaded="" data-src="deck/d43edf1f74abe01d755fec97b159f834.jpg"></div></div></section><section data-id="fb79bdb2db3ad745fa069d8ca8cf61db"><div class="sl-block" data-block-type="text" style="width: 839px; left: 61px; top: 22px; height: auto;" data-block-id="5962379840e0506cda63cd3f942dc245"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10;">
<h2>Make me a &lt;Dog&gt;</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 937px; height: 525px; left: 12px; top: 105px;" data-block-id="c45281cf0ed82922d29d6cb7260183a4"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="cpp"><code>static inline VALUE make_metaclass(VALUE klass)
{
  VALUE super;
  VALUE metaclass = rb_class_boot(Qundef);

  FL_SET(metaclass, FL_SINGLETON);
  rb_singleton_class_attached(metaclass, klass);

  if (META_CLASS_OF_CLASS_CLASS_P(klass)) {
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, metaclass);
  }
  else {
    VALUE tmp = METACLASS_OF(klass); 
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, ENSURE_EIGENCLASS(tmp));
  }

  super = RCLASS_SUPER(klass);
  while (RB_TYPE_P(super, T_ICLASS)) super = RCLASS_SUPER(super);
  RCLASS_SET_SUPER(metaclass, super ? ENSURE_EIGENCLASS(super) : rb_cClass);

  OBJ_INFECT(metaclass, RCLASS_SUPER(metaclass));

  return metaclass;
}</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 472px; height: 109px; left: 33px; top: 147px;" data-block-id="9ddfe1fb915f6ac22d7470cd9fa08fc0"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 12;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 472 109"><defs><clippath id="shape-mask-19-1498041028878"><rect width="472" height="109"></rect></clippath></defs><rect width="472" height="109" clip-path="url(#shape-mask-19-1498041028878)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 44px; left: 516px; top: 182px;" data-block-id="775e731bc23dd71cec03f462e388af25"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14; background-color: rgb(255, 66, 95); color: rgb(255, 255, 255);" data-fragment-index="0">
<p><strong>1</strong></p>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 552px; height: 188px; left: 33px; top: 261px;" data-block-id="4f881f0c5d75a8105950ea877fce3162"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 15;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 552 188"><defs><clippath id="shape-mask-20-1498041028883"><rect width="552" height="188"></rect></clippath></defs><rect width="552" height="188" clip-path="url(#shape-mask-20-1498041028883)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 749px; height: 73px; left: 33px; top: 461px;" data-block-id="b45ca6d7ac634fceff1066b38c0d2b98"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 16;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 749 73"><defs><clippath id="shape-mask-21-1498041028886"><rect width="749" height="73"></rect></clippath></defs><rect width="749" height="73" clip-path="url(#shape-mask-21-1498041028886)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 44px; left: 596px; top: 331px;" data-block-id="31e6b7b0c3ae9eaa912aa59e8581189a"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 17; background-color: rgb(255, 66, 95); color: rgb(255, 255, 255);" data-fragment-index="1">
<p><strong>2</strong></p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 44px; left: 791px; top: 478px;" data-block-id="e99ff154a8d80d51180ee355ca8442e0"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 18; background-color: rgb(255, 66, 95); color: rgb(255, 255, 255);" data-fragment-index="2">
<p><strong>3</strong></p>
</div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 342px; height: 109px; left: 585px; top: 147px;" data-block-id="3a808075072d95c1bdbe3c15ff24467a"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 19;" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 342 109"><rect width="342" height="109" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 270px; height: 188px; left: 657px; top: 265px;" data-block-id="63dd6154cef0617b5ac4840f820b126d"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 20;" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 270 188"><rect width="270" height="188" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 411px; height: 70px; left: 516px; top: 546px;" data-block-id="8e18b576bbdeb8560ce43f194e110c80"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 21;" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 411 70"><rect width="411" height="70" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 322px; left: 597px; top: 139px;" data-block-id="65edc1521b3dadad6751aa00564539d3"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 22;" dir="ui" data-fragment-index="0">
<p><span style="font-size:0.7em">Initialize metaclass as new RClass struct; set singleton flag; (attach Dog class to metaclass)</span></p>
</div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 552px; height: 89px; left: 33px; top: 261px;" data-block-id="5a43ac0f570fcf9bd9dd894ba7fb70da"><div class="sl-block-style" style="z-index: 23; opacity: 0.64;"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 23;" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 552 89"><rect width="552" height="89" class="shape-element" fill="rgb(255, 66, 95)"></rect></svg></div></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 254px; left: 664px; top: 273px;" data-block-id="f5bf64518684b0b52d3d02d6eb7025b6"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 24;" dir="ui" data-fragment-index="1">
<p><span style="font-size:0.7em">Set Dog's <strong>klass</strong> to point to the new metaclass;</span></p>

<p><span style="font-size:0.7em">Set metclass's <strong>klass </strong>to point to...what?</span></p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 408px; left: 519px; top: 560px;" data-block-id="a85687cc6da016854ef46c17251488f1"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 25;" dir="ui" data-fragment-index="2">
<p><span style="font-size:0.7em">Set metaclass's <strong>super</strong> to point to...what?</span></p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 195px; left: 738px; top: 59px;" data-block-id="f1b39cd11979e5fae13eb7bafdf8414f"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 26;">
<pre style="text-align:center"><span style="font-size:0.5em">(class.c)</span></pre>
</div></div></section><section data-id="08b7fac39eeebee8b094b25b79a7996d"><div class="sl-block" data-block-type="text" style="width: 839px; left: 61px; top: 22px; height: auto;" data-block-id="71f05840715b8e46c863eb545cbaef08"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10;">
<h2>Make me a &lt;Dog&gt;</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 937px; height: 525px; left: 12px; top: 105px;" data-block-id="dbbe50c614fc8369b607faf069c678c8"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="cpp"><code>static inline VALUE make_metaclass(VALUE klass)
{
  VALUE super;
  VALUE metaclass = rb_class_boot(Qundef);

  FL_SET(metaclass, FL_SINGLETON);
  rb_singleton_class_attached(metaclass, klass);

  if (META_CLASS_OF_CLASS_CLASS_P(klass)) {
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, metaclass);
  }
  else {
    VALUE tmp = METACLASS_OF(klass); 
    SET_METACLASS_OF(klass, metaclass);
    /* SET_METACLASS_OF(metaclass, ENSURE_EIGENCLASS(tmp));
  }

  super = RCLASS_SUPER(klass);
  while (RB_TYPE_P(super, T_ICLASS)) super = RCLASS_SUPER(super);
  RCLASS_SET_SUPER(metaclass, super ? ENSURE_EIGENCLASS(super) : rb_cClass);

  OBJ_INFECT(metaclass, RCLASS_SUPER(metaclass));

  return metaclass;*/
}</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 552px; height: 264px; left: 33px; top: 146px;" data-block-id="73f100d4c80063f043e6b0710364f020"><div class="sl-block-content" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 14;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 552 264"><defs><clippath id="shape-mask-22-1498041033255"><rect width="552" height="264"></rect></clippath></defs><rect width="552" height="264" clip-path="url(#shape-mask-22-1498041033255)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 552px; height: 89px; left: 33px; top: 261px;" data-block-id="9bacc8acdf7abb3ba918f04bcd5e997c"><div class="sl-block-style" style="z-index: 22; opacity: 0.64;"><div class="sl-block-content" data-shape-type="rect" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 22;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 552 89"><rect width="552" height="89" class="shape-element" fill="rgb(255, 66, 95)"></rect></svg></div></div></div></section><section data-id="c53ad0b761d83df41f97be910e90d84a"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 855px; height: 588px; left: 53px; top: 30px;" data-block-id="712afe6f2ed100f50aa5c9b69d46cc02"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/f99672d2f753faa781fdfdb8f098923a.png"></div></div></section><section data-id="6c4ff378312e128f5b6e872f39e8bad0"><div class="sl-block" data-block-type="text" style="width: 839px; left: 61px; top: 22px; height: auto;" data-block-id="5e20ae70c39440597e9db7d2316d4151"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 11;">
<h2>Make me a &lt;Dog&gt;</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 937px; height: 525px; left: 12px; top: 105px;" data-block-id="25cdb8413181247cee987c277b2916e6"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 12;"><pre class="cpp"><code>static inline VALUE make_metaclass(VALUE klass)
{
  VALUE super;
  VALUE metaclass = rb_class_boot(Qundef);

  FL_SET(metaclass, FL_SINGLETON);
  rb_singleton_class_attached(metaclass, klass);

  if (META_CLASS_OF_CLASS_CLASS_P(klass)) {
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, metaclass);
  }
  else {
    VALUE tmp = METACLASS_OF(klass); 
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, ENSURE_EIGENCLASS(tmp));
  }

  super = RCLASS_SUPER(klass);
  while (RB_TYPE_P(super, T_ICLASS)) super = RCLASS_SUPER(super);
  RCLASS_SET_SUPER(metaclass, super ? ENSURE_EIGENCLASS(super) : rb_cClass);

  OBJ_INFECT(metaclass, RCLASS_SUPER(metaclass));

  return metaclass;
}</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 552px; height: 188px; left: 33px; top: 261px;" data-block-id="915e6e1987236c9efdf643d7396db4ec"><div class="sl-block-content" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 13;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 552 188"><defs><clippath id="shape-mask-23-1498041034966"><rect width="552" height="188"></rect></clippath></defs><rect width="552" height="188" clip-path="url(#shape-mask-23-1498041034966)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 44px; left: 596px; top: 331px;" data-block-id="88180e11216444306c47ec0e50c3c91a"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14; background-color: rgb(255, 66, 95); color: rgb(255, 255, 255);">
<p><strong>2</strong></p>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 270px; height: 188px; left: 657px; top: 265px;" data-block-id="7a09e407c3af194f10229082c2c5e37d"><div class="sl-block-content" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 15;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 270 188"><rect width="270" height="188" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 552px; height: 89px; left: 33px; top: 261px;" data-block-id="f7ee5300a2caeec418a304248a75c715"><div class="sl-block-style" style="z-index: 16; opacity: 0.64;"><div class="sl-block-content" data-shape-type="rect" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 16;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 552 89"><rect width="552" height="89" class="shape-element" fill="rgb(255, 66, 95)"></rect></svg></div></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 254px; left: 664px; top: 273px;" data-block-id="14df036a567d7ff10effb47dcaee2c61"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 17;" dir="ui">
<p><span style="font-size:0.7em">Set Dog's <strong>klass</strong> to point to the new metaclass;</span></p>

<p><span style="font-size:0.7em">Set metclass's <strong>klass </strong>to point to...what?</span></p>
</div></div>
</section><section data-id="b1d9ed635db60c89b993c99cd54fc87e"><div class="sl-block" data-block-type="text" style="width: 839px; left: 61px; top: 22px; height: auto;" data-block-id="180350f0b390768c43c23ce1a3f2c9da"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10;">
<h2>Make me a &lt;Dog&gt;</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 937px; height: 525px; left: 12px; top: 105px;" data-block-id="cc302e12cf52daba67e0dd6ec8d3f83d"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="cpp"><code>static inline VALUE make_metaclass(VALUE klass)
{
  VALUE super;
  VALUE metaclass = rb_class_boot(Qundef);

  FL_SET(metaclass, FL_SINGLETON);
  rb_singleton_class_attached(metaclass, klass);

  if (META_CLASS_OF_CLASS_CLASS_P(klass)) {
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, metaclass);
  }
  else {
    VALUE tmp = METACLASS_OF(klass); 
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, ENSURE_EIGENCLASS(tmp));
  }

  super = RCLASS_SUPER(klass);
  while (RB_TYPE_P(super, T_ICLASS)) super = RCLASS_SUPER(super);
  RCLASS_SET_SUPER(metaclass, super ? ENSURE_EIGENCLASS(super) : rb_cClass);

  OBJ_INFECT(metaclass, RCLASS_SUPER(metaclass));

  return metaclass;
}</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 552px; height: 188px; left: 33px; top: 261px;" data-block-id="5b4d5e5befa6c074395067f4c32e040c"><div class="sl-block-content" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 12;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 552 188"><defs><clippath id="shape-mask-24-1498041035539"><rect width="552" height="188"></rect></clippath></defs><rect width="552" height="188" clip-path="url(#shape-mask-24-1498041035539)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 44px; left: 596px; top: 261px;" data-block-id="bd2c0e42b9755a768828f72f68d9d6cc"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; background-color: rgb(255, 66, 95); color: rgb(255, 255, 255);">
<p><strong>2</strong></p>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 279px; height: 212px; left: 657px; top: 396px;" data-block-id="efad3dfcc451cb830a69028cf6ace777"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 14;" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 279 212"><rect width="279" height="212" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 552px; height: 89px; left: 33px; top: 261px;" data-block-id="8e8b6a3d5d4f02fb4d0fcc712b587bed"><div class="sl-block-style" style="z-index: 15; opacity: 0.64;"><div class="sl-block-content" data-shape-type="rect" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 15;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 552 89"><rect width="552" height="89" class="shape-element" fill="rgb(255, 66, 95)"></rect></svg></div></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 333px; top: 429px;" data-block-id="8d76a0a072a77e86325477592a9150b0"><div class="sl-block-content fragment" data-line-x1="-47" data-line-y1="179" data-line-x2="173" data-line-y2="179" data-line-color="#ff425f" data-line-start-type="none" data-line-end-type="none" style="z-index: 16;" data-line-width="5px" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="220" height="1" viewbox="-47 179 220 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-46.5" y1="179.5" x2="173.5" y2="179.5"></line><line stroke="#ff425f" stroke-width="5" x1="-46.5" y1="179.5" x2="173.5" y2="179.5"></line></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 585px; top: 420px;" data-block-id="567a726583a610760854c48660eb154f"><div class="sl-block-content fragment" data-line-x1="205" data-line-y1="170" data-line-x2="277" data-line-y2="170" data-line-color="#ffffff" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 17;" data-line-width="5px" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="72" height="1" viewbox="205 170 72 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="205.5" y1="170.5" x2="270.5" y2="170.5"></line><line stroke="#ffffff" stroke-width="5" x1="205.5" y1="170.5" x2="270.5" y2="170.5"></line><polygon fill="#ffffff" transform="translate(270,170) rotate(90)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 247px; left: 672px; top: 405px;" data-block-id="6aed3b43376621cc7026439458282c0a"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 18;" data-fragment-index="2">
<p><span style="font-size:0.7em">This macro calls</span></p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 267px; left: 667px; top: 444px;" data-block-id="a9c0391765a7d03edf4d7af124f3b3e6"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 19;" data-fragment-index="2">
<pre style="text-align:center"><strong><span style="font-size:0.7em">make_metaclass(Class)
</span></strong></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 247px; left: 673px; top: 480px;" data-block-id="9731b0f416214b4091442f006f292f3c"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 21;" data-fragment-index="3">
<p><span style="font-size:0.7em">The Dog metaclass's <strong>klass </strong>points to the <em>Class metaclass!</em></span></p>
</div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 61px; top: 387px;" data-block-id="c3ea8b8a15a276cd021259efdf4a1a33"><div class="sl-block-content fragment" data-line-x1="-47" data-line-y1="179" data-line-x2="272" data-line-y2="179" data-line-color="#ff425f" data-line-start-type="none" data-line-end-type="none" style="z-index: 22;" data-line-width="5px" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="319" height="1" viewbox="-47 179 319 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-46.5" y1="179.5" x2="272.5" y2="179.5"></line><line stroke="#ff425f" stroke-width="5" x1="-46.5" y1="179.5" x2="272.5" y2="179.5"></line></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 390px; top: 376px;" data-block-id="f6e15ba058dd3f30350c217214bd4d0c"><div class="sl-block-content fragment" data-line-x1="205" data-line-y1="170" data-line-x2="472" data-line-y2="170" data-line-color="#ffffff" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 23;" data-line-width="5px" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="267" height="1" viewbox="205 170 267 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="205.5" y1="170.5" x2="465.5" y2="170.5"></line><line stroke="#ffffff" stroke-width="5" x1="205.5" y1="170.5" x2="465.5" y2="170.5"></line><polygon fill="#ffffff" transform="translate(465,170) rotate(90)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 279px; height: 202px; left: 656px; top: 184px;" data-block-id="bfb94df485234a54037b5af710ea9ead"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 24;" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 279 202"><rect width="279" height="202" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 247px; left: 677px; top: 184px;" data-block-id="044970cc5ce210589b67dfe73dc03d43"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 25;" data-fragment-index="0">
<p><span style="font-size:0.7em">tmp is whatever Dog's <strong>klass </strong>points to before we set it to the new metaclass.</span></p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 267px; left: 669px; top: 340px;" data-block-id="cae15835fab0265df169a5544bf77d54"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 26;" data-fragment-index="1">
<pre style="text-align:center"><strong><span style="font-size:0.7em">tmp = Class
</span></strong></pre>
</div></div></section><section data-id="b7844ea71804ae78a6c9c61a1b0bf99d"><div class="sl-block" data-block-type="text" style="width: 888px; left: 25px; top: 24px; height: auto;" data-block-id="e4b4757bd167e257e0b8def4cf976372"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10; color: rgb(255, 66, 95);">
<h2>Make me a &lt;Class&gt;</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 937px; height: 525px; left: 12px; top: 105px;" data-block-id="1a4c75000be15479cf323a17a32fb50a"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="cpp"><code>static inline VALUE make_metaclass(VALUE klass)
{
  VALUE super;
  VALUE metaclass = rb_class_boot(Qundef);

  FL_SET(metaclass, FL_SINGLETON);
  rb_singleton_class_attached(metaclass, klass);

  if (META_CLASS_OF_CLASS_CLASS_P(klass)) {
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, metaclass);
  }
  else {
    VALUE tmp = METACLASS_OF(klass); 
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, ENSURE_EIGENCLASS(tmp));
  }

  super = RCLASS_SUPER(klass);
  while (RB_TYPE_P(super, T_ICLASS)) super = RCLASS_SUPER(super);
  RCLASS_SET_SUPER(metaclass, super ? ENSURE_EIGENCLASS(super) : rb_cClass);

  OBJ_INFECT(metaclass, RCLASS_SUPER(metaclass));

  return metaclass;
}</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 552px; height: 188px; left: 33px; top: 261px;" data-block-id="72f35da3516331729035600d9c345452"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 12;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 552 188"><defs><clippath id="shape-mask-25-1498041036261"><rect width="552" height="188"></rect></clippath></defs><rect width="552" height="188" clip-path="url(#shape-mask-25-1498041036261)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 44px; left: 596px; top: 261px;" data-block-id="dae18eceec0a16289820950684967884"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; background-color: rgb(255, 66, 95); color: rgb(255, 255, 255);" data-fragment-index="1">
<p><strong>2</strong></p>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 552px; height: 97px; left: 33px; top: 350px;" data-block-id="d85d232e7e901e3e35422375a2c1cdf1"><div class="sl-block-style" style="z-index: 15; opacity: 0.64;"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(255, 66, 95)" data-shape-stretch="true" style="z-index: 15;" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 552 97"><rect width="552" height="97" class="shape-element" fill="rgb(255, 66, 95)"></rect></svg></div></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 58px; top: 328px;" data-block-id="3bd46329949f3cb4282d5b0eb05855d7"><div class="sl-block-content fragment" data-line-x1="-47" data-line-y1="179" data-line-x2="338" data-line-y2="179" data-line-color="#ff425f" data-line-start-type="none" data-line-end-type="none" style="z-index: 21;" data-line-width="5px" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="385" height="1" viewbox="-47 179 385 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-46.5" y1="179.5" x2="338.5" y2="179.5"></line><line stroke="#ff425f" stroke-width="5" x1="-46.5" y1="179.5" x2="338.5" y2="179.5"></line></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 458px; top: 320px;" data-block-id="ce2c7a6245e3fe4e845adafbc109f92a"><div class="sl-block-content fragment" data-line-x1="194" data-line-y1="170" data-line-x2="392" data-line-y2="170" data-line-color="#ffffff" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 22;" data-line-width="5px" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="198" height="1" viewbox="194 170 198 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="194.5" y1="170.5" x2="385.5" y2="170.5"></line><line stroke="#ffffff" stroke-width="5" x1="194.5" y1="170.5" x2="385.5" y2="170.5"></line><polygon fill="#ffffff" transform="translate(385,170) rotate(90)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 279px; height: 202px; left: 656px; top: 184px;" data-block-id="db45ee8f4638e7d0b30b052e4d2b3684"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 23;" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 279 202"><rect width="279" height="202" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 258px; left: 667px; top: 199px;" data-block-id="23fe43ffa9d1942d94a421a68b0196a0"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 24;" data-fragment-index="1">
<p><span style="font-size:0.7em">The Class metaclass's <strong>klass</strong> points to itself! </span></p>

<p><span style="font-size:0.7em">(just like how Class's <strong>klass </strong>used to point to itself)</span></p>
</div></div></section><section data-id="75273339966383d1dc0405bf9b42c441"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 896px; height: 616px; left: 0px; top: 14px;" data-block-id="fc2bbad89265662f46e5f7454756465c"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/525d43adef9f5f058e9b87373be40bad.png"></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 240px; left: 26px; top: 87px;" data-block-id="307274b5b99924585159d34571164f43"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 11; color: rgb(255, 66, 95); text-align: center;" data-fragment-index="0">
<pre><span style="font-size:0.7em">make_metaclass(Dog)</span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 274px; left: 9px; top: 138px;" data-block-id="766f855cc330cd4f791f0ad10683e87a"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12; color: rgb(255, 66, 95); text-align: center;" data-fragment-index="1">
<pre><span style="font-size:0.7em">make_metaclass(Class)</span></pre>
</div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 134px; top: 123px;" data-block-id="c6577db692d3cfc5955699238a965d87"><div class="sl-block-content fragment" data-line-x1="-246" data-line-y1="-103" data-line-x2="-246" data-line-y2="-127" data-line-color="#000000" data-line-start-type="line-arrow" data-line-end-type="none" style="z-index: 14;" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="1" height="24" viewbox="-246 -127 1 24"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-246" y1="-105" x2="-246" y2="-127"></line><line stroke="#000000" stroke-width="2" x1="-246" y1="-105" x2="-246" y2="-127"></line><path style="fill: rgba(0,0,0,0);" stroke="#000000" stroke-width="2" transform="translate(-246,-105) rotate(0)" d="M -6 -6 L 0 0 L 6 -6"></path></svg></div></div></section><section data-id="69b0d4c5bd1d2abd982ceb5a8aab1f13"><div class="sl-block" data-block-type="text" style="width: 888px; left: 25px; top: 24px; height: auto;" data-block-id="ad6b76451a2ff1043470524308a3f27e"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10; color: rgb(255, 66, 95);">
<h2>Make me a &lt;Class&gt;</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 937px; height: 525px; left: 12px; top: 105px;" data-block-id="b621281521417231a53385ac5d12d9c8"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="cpp"><code>static inline VALUE make_metaclass(VALUE klass)
{
  VALUE super;
  VALUE metaclass = rb_class_boot(Qundef);

  FL_SET(metaclass, FL_SINGLETON);
  rb_singleton_class_attached(metaclass, klass);

  if (META_CLASS_OF_CLASS_CLASS_P(klass)) {
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, metaclass);
  }
  else {
    VALUE tmp = METACLASS_OF(klass); 
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, ENSURE_EIGENCLASS(tmp));
  }

  super = RCLASS_SUPER(klass);
  while (RB_TYPE_P(super, T_ICLASS)) super = RCLASS_SUPER(super);
  RCLASS_SET_SUPER(metaclass, super ? ENSURE_EIGENCLASS(super) : rb_cClass);

  OBJ_INFECT(metaclass, RCLASS_SUPER(metaclass));

  return metaclass;
}</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 750px; height: 75px; left: 33px; top: 460px;" data-block-id="2b155015861abd714e8e93ae559875ae"><div class="sl-block-content" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 12;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 750 75"><defs><clippath id="shape-mask-26-1498041037734"><rect width="750" height="75"></rect></clippath></defs><rect width="750" height="75" clip-path="url(#shape-mask-26-1498041037734)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 44px; left: 800px; top: 478px;" data-block-id="e77f19766496d59b2bf25d382b49aef5"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; background-color: rgb(255, 66, 95); color: rgb(255, 255, 255);">
<p><strong>3</strong></p>
</div></div>

<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 392px; top: 525px;" data-block-id="f58bab208039269ac089ed6ffb0b2983"><div class="sl-block-content fragment" data-line-x1="-46" data-line-y1="179" data-line-x2="210" data-line-y2="179" data-line-color="#ff425f" data-line-start-type="none" data-line-end-type="none" style="z-index: 15;" data-line-width="5px" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="256" height="1" viewbox="-46 179 256 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-45.5" y1="179.5" x2="210.5" y2="179.5"></line><line stroke="#ff425f" stroke-width="5" x1="-45.5" y1="179.5" x2="210.5" y2="179.5"></line></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 640px; top: 440px;" data-block-id="2b3bc8c6b1b7c61a89c62ad8ec3853b3"><div class="sl-block-content fragment" data-line-x1="376" data-line-y1="360" data-line-x2="438" data-line-y2="290" data-line-color="#ffffff" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 16;" data-line-width="5px" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="62" height="70" viewbox="376 290 62 70"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="376.5" y1="360.5" x2="433.5" y2="296.5"></line><line stroke="#ffffff" stroke-width="5" x1="376.5" y1="360.5" x2="433.5" y2="296.5"></line><polygon fill="#ffffff" transform="translate(433,296) rotate(41.532)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 328px; height: 160px; left: 603px; top: 280px;" data-block-id="4d799b2b09b58c05452790c10e7f7c61"><div class="sl-block-style" style="z-index: 17;"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 17;" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 328 160"><rect width="328" height="160" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 298px; left: 618px; top: 302px;" data-block-id="511799b50182bc8f1c9dc598ca05bafd"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 18;" data-fragment-index="0">
<p><span style="font-size:0.7em">The <strong>superclass </strong>of the Class metaclass is the <em><strong>metaclass </strong>of Class's superclass</em></span></p>
</div></div></section><section data-id="e10e11c990eb842f400ceadc59e96754"><div class="sl-block" data-block-type="image" style="width: 896px; height: 616px; left: 0px; top: 14px;" data-block-id="d1a94371fba0d831a92127e4ce3debeb"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/567a1925e719297cdb3cc5114d9e3993.png"></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 240px; left: 26px; top: 87px;" data-block-id="cd0d2d2dd02101f1aa20e6839878b753"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 11; color: rgb(255, 66, 95); text-align: center;" data-fragment-index="0">
<pre><span style="font-size:0.7em">make_metaclass(Dog)</span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 274px; left: 9px; top: 138px;" data-block-id="791976140dec32a9578c5f9f16d43bb3"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12; color: rgb(255, 66, 95); text-align: center;" data-fragment-index="1">
<pre><span style="font-size:0.7em">make_metaclass(Class)</span></pre>
</div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 134px; top: 123px;" data-block-id="a1a8c137d9dd5ed9d0f050c9d21958f4"><div class="sl-block-content fragment" data-line-x1="-246" data-line-y1="-103" data-line-x2="-246" data-line-y2="-127" data-line-color="#000000" data-line-start-type="line-arrow" data-line-end-type="none" style="z-index: 13;" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="1" height="24" viewbox="-246 -127 1 24"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-246" y1="-105" x2="-246" y2="-127"></line><line stroke="#000000" stroke-width="2" x1="-246" y1="-105" x2="-246" y2="-127"></line><path style="fill: rgba(0,0,0,0);" stroke="#000000" stroke-width="2" transform="translate(-246,-105) rotate(0)" d="M -6 -6 L 0 0 L 6 -6"></path></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 284px; left: 4px; top: 202px;" data-block-id="5399c6eaac0a8a3ee40aee06a82ef04d"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 15; color: rgb(255, 66, 95); text-align: center;" data-fragment-index="2">
<pre><span style="font-size:0.7em">make_metaclass(Module)</span></pre>
</div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; min-width: 1px; min-height: 1px; left: 134px; top: 178px;" data-block-id="b3b8a27135e0683f87852a1ceabbe822"><div class="sl-block-content fragment" data-line-x1="-246" data-line-y1="-103" data-line-x2="-246" data-line-y2="-127" data-line-color="#000000" data-line-start-type="line-arrow" data-line-end-type="none" style="z-index: 16;" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="1" height="24" viewbox="-246 -127 1 24"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-246" y1="-105" x2="-246" y2="-127"></line><line stroke="#000000" stroke-width="2" x1="-246" y1="-105" x2="-246" y2="-127"></line><path style="fill: rgba(0,0,0,0);" stroke="#000000" stroke-width="2" transform="translate(-246,-105) rotate(0)" d="M -6 -6 L 0 0 L 6 -6"></path></svg></div></div></section><section data-id="8e2491ea0dac3710a94307c416f23072"><div class="sl-block" data-block-type="image" style="width: 896px; height: 616px; left: 0px; top: 14px;" data-block-id="5ff0edbd1c5bf5c12ba1d28836e9d4f7"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/cf2e34bedc226d0afd0bfd8fb83c7e73.png"></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 240px; left: 26px; top: 87px;" data-block-id="9624f482fe24177cd65b57cec601a69c"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 11; color: rgb(255, 66, 95); text-align: center;">
<pre><span style="font-size:0.7em">make_metaclass(Dog)</span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 274px; left: 9px; top: 138px;" data-block-id="b99caf9be0efd1e593460001be4ecb34"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12; color: rgb(255, 66, 95); text-align: center;">
<pre><span style="font-size:0.7em">make_metaclass(Class)</span></pre>
</div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 134px; top: 123px;" data-block-id="0b6ed82a6f389609f5723e3fc3ac162f"><div class="sl-block-content" data-line-x1="-246" data-line-y1="-103" data-line-x2="-246" data-line-y2="-127" data-line-color="#000000" data-line-start-type="line-arrow" data-line-end-type="none" style="z-index: 13;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="1" height="24" viewbox="-246 -127 1 24"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-246" y1="-105" x2="-246" y2="-127"></line><line stroke="#000000" stroke-width="2" x1="-246" y1="-105" x2="-246" y2="-127"></line><path style="fill: rgba(0,0,0,0);" stroke="#000000" stroke-width="2" transform="translate(-246,-105) rotate(0)" d="M -6 -6 L 0 0 L 6 -6"></path></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 284px; left: 4px; top: 202px;" data-block-id="7834f88b44b7b19d31f87f3e8819ef4b"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14; color: rgb(255, 66, 95); text-align: center;">
<pre><span style="font-size:0.7em">make_metaclass(Module)</span></pre>
</div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 134px; top: 178px;" data-block-id="e602f7f262b67142f952e10bec4b117e"><div class="sl-block-content" data-line-x1="-246" data-line-y1="-103" data-line-x2="-246" data-line-y2="-127" data-line-color="#000000" data-line-start-type="line-arrow" data-line-end-type="none" style="z-index: 16;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="1" height="24" viewbox="-246 -127 1 24"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-246" y1="-105" x2="-246" y2="-127"></line><line stroke="#000000" stroke-width="2" x1="-246" y1="-105" x2="-246" y2="-127"></line><path style="fill: rgba(0,0,0,0);" stroke="#000000" stroke-width="2" transform="translate(-246,-105) rotate(0)" d="M -6 -6 L 0 0 L 6 -6"></path></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 134px; top: 238px;" data-block-id="4c27f355971195747b71115443f0016d"><div class="sl-block-content fragment" data-line-x1="-246" data-line-y1="-103" data-line-x2="-246" data-line-y2="-127" data-line-color="#000000" data-line-start-type="line-arrow" data-line-end-type="none" style="z-index: 17;" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="1" height="24" viewbox="-246 -127 1 24"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-246" y1="-105" x2="-246" y2="-127"></line><line stroke="#000000" stroke-width="2" x1="-246" y1="-105" x2="-246" y2="-127"></line><path style="fill: rgba(0,0,0,0);" stroke="#000000" stroke-width="2" transform="translate(-246,-105) rotate(0)" d="M -6 -6 L 0 0 L 6 -6"></path></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 284px; left: 0px; top: 252px;" data-block-id="fd5eac66a619fde7c47c811c70444a2d"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 18; color: rgb(255, 66, 95); text-align: center;" data-fragment-index="0">
<pre><span style="font-size:0.7em">make_metaclass(Object)</span></pre>
</div></div></section><section data-id="db816c49d92d2e36b7118369768e673f"><div class="sl-block" data-block-type="image" style="width: 896px; height: 616px; left: 0px; top: 14px;" data-block-id="8801c92bba6fe12b6ceaf85ee3458f58"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/ca7699de0a886ea4714aff9b2cc8ecc5.png"></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 240px; left: 26px; top: 87px;" data-block-id="6a3b289d6d3e78a9af7b0afffcad276f"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 11; color: rgb(255, 66, 95); text-align: center;">
<pre><span style="font-size:0.7em">make_metaclass(Dog)</span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 274px; left: 9px; top: 138px;" data-block-id="34cc1084b08979efc56c3670f14fcac4"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12; color: rgb(255, 66, 95); text-align: center;">
<pre><span style="font-size:0.7em">make_metaclass(Class)</span></pre>
</div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 134px; top: 123px;" data-block-id="ccfc8e3cd7bb500abe0503c106d0dc46"><div class="sl-block-content" data-line-x1="-246" data-line-y1="-103" data-line-x2="-246" data-line-y2="-127" data-line-color="#000000" data-line-start-type="line-arrow" data-line-end-type="none" style="z-index: 13;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="1" height="24" viewbox="-246 -127 1 24"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-246" y1="-105" x2="-246" y2="-127"></line><line stroke="#000000" stroke-width="2" x1="-246" y1="-105" x2="-246" y2="-127"></line><path style="fill: rgba(0,0,0,0);" stroke="#000000" stroke-width="2" transform="translate(-246,-105) rotate(0)" d="M -6 -6 L 0 0 L 6 -6"></path></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 284px; left: 4px; top: 202px;" data-block-id="0ec22e6d33a7aaf68f2bb9a2a7e68d2d"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14; color: rgb(255, 66, 95); text-align: center;">
<pre><span style="font-size:0.7em">make_metaclass(Module)</span></pre>
</div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 134px; top: 178px;" data-block-id="c2878e7b33f3589bacf0ea7b6eeb4755"><div class="sl-block-content" data-line-x1="-246" data-line-y1="-103" data-line-x2="-246" data-line-y2="-127" data-line-color="#000000" data-line-start-type="line-arrow" data-line-end-type="none" style="z-index: 15;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="1" height="24" viewbox="-246 -127 1 24"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-246" y1="-105" x2="-246" y2="-127"></line><line stroke="#000000" stroke-width="2" x1="-246" y1="-105" x2="-246" y2="-127"></line><path style="fill: rgba(0,0,0,0);" stroke="#000000" stroke-width="2" transform="translate(-246,-105) rotate(0)" d="M -6 -6 L 0 0 L 6 -6"></path></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 134px; top: 238px;" data-block-id="c720570753e9bce17b20688c8d9f2445"><div class="sl-block-content" data-line-x1="-246" data-line-y1="-103" data-line-x2="-246" data-line-y2="-127" data-line-color="#000000" data-line-start-type="line-arrow" data-line-end-type="none" style="z-index: 16;"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="1" height="24" viewbox="-246 -127 1 24"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-246" y1="-105" x2="-246" y2="-127"></line><line stroke="#000000" stroke-width="2" x1="-246" y1="-105" x2="-246" y2="-127"></line><path style="fill: rgba(0,0,0,0);" stroke="#000000" stroke-width="2" transform="translate(-246,-105) rotate(0)" d="M -6 -6 L 0 0 L 6 -6"></path></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 284px; left: 0px; top: 252px;" data-block-id="51af7bcb2ad03b55ab6835770d985e57"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 18; color: rgb(255, 66, 95); text-align: center;">
<pre><span style="font-size:0.7em">make_metaclass(Object)</span></pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 343px; left: 0px; top: 298px;" data-block-id="e29280adda3c8114a22ed8a6c0b5d866"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 19; color: rgb(255, 66, 95); text-align: center;" data-fragment-index="0">
<pre><span style="font-size:0.7em">make_metaclass(BasicObject)</span></pre>
</div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 133px; top: 286px;" data-block-id="c317557096c0d83302a8eef5c8073ee0"><div class="sl-block-content fragment" data-line-x1="-246" data-line-y1="-103" data-line-x2="-246" data-line-y2="-127" data-line-color="#000000" data-line-start-type="line-arrow" data-line-end-type="none" style="z-index: 20;" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="1" height="24" viewbox="-246 -127 1 24"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="-246" y1="-105" x2="-246" y2="-127"></line><line stroke="#000000" stroke-width="2" x1="-246" y1="-105" x2="-246" y2="-127"></line><path style="fill: rgba(0,0,0,0);" stroke="#000000" stroke-width="2" transform="translate(-246,-105) rotate(0)" d="M -6 -6 L 0 0 L 6 -6"></path></svg></div></div></section><section data-id="ae367da2edd8f57177ca82993f23dead"><div class="sl-block" data-block-type="text" style="width: 901px; left: 12px; top: 24px; height: auto;" data-block-id="e05846fc36a8c39265dd3c09e1df212a"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10; color: rgb(255, 66, 95);">
<h2>super of &lt;BasicObject&gt;?</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 937px; height: 525px; left: 12px; top: 105px;" data-block-id="7508528818a481dcea0d468053c927ea"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="cpp"><code>static inline VALUE make_metaclass(VALUE klass)
{
  VALUE super;
  VALUE metaclass = rb_class_boot(Qundef);

  FL_SET(metaclass, FL_SINGLETON);
  rb_singleton_class_attached(metaclass, klass);

  if (META_CLASS_OF_CLASS_CLASS_P(klass)) {
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, metaclass);
  }
  else {
    VALUE tmp = METACLASS_OF(klass); 
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, ENSURE_EIGENCLASS(tmp));
  }

  super = RCLASS_SUPER(klass);
  while (RB_TYPE_P(super, T_ICLASS)) super = RCLASS_SUPER(super);
  RCLASS_SET_SUPER(metaclass, super ? ENSURE_EIGENCLASS(super) : rb_cClass);

  OBJ_INFECT(metaclass, RCLASS_SUPER(metaclass));

  return metaclass;
}</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 750px; height: 75px; left: 33px; top: 460px;" data-block-id="4a85fbb52ded9b595b165260ff88a642"><div class="sl-block-content" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 12;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 750 75"><defs><clippath id="shape-mask-27-1498041040166"><rect width="750" height="75"></rect></clippath></defs><rect width="750" height="75" clip-path="url(#shape-mask-27-1498041040166)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 44px; left: 800px; top: 478px;" data-block-id="1926b9709ae737a4f737d96e974a1dfe"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; background-color: rgb(255, 66, 95); color: rgb(255, 255, 255);">
<p><strong>3</strong></p>
</div></div>

<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 664px; top: 525px;" data-block-id="349a3923ddd3a6c873415e8d67889c9b"><div class="sl-block-content fragment" data-line-x1="226" data-line-y1="179" data-line-x2="329" data-line-y2="179" data-line-color="#ff425f" data-line-start-type="none" data-line-end-type="none" style="z-index: 14;" data-line-width="5px" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="103" height="1" viewbox="226 179 103 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="226.5" y1="179.5" x2="329.5" y2="179.5"></line><line stroke="#ff425f" stroke-width="5" x1="226.5" y1="179.5" x2="329.5" y2="179.5"></line></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 702px; top: 440px;" data-block-id="dce88de870123c173c73e55f0d8144ab"><div class="sl-block-content fragment" data-line-x1="438" data-line-y1="354" data-line-x2="438" data-line-y2="290" data-line-color="#ffffff" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 15;" data-line-width="5px" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="1" height="64" viewbox="438 290 1 64"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="438.5" y1="354.5" x2="438.5" y2="298.5"></line><line stroke="#ffffff" stroke-width="5" x1="438.5" y1="354.5" x2="438.5" y2="298.5"></line><polygon fill="#ffffff" transform="translate(438,298) rotate(0)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 328px; height: 119px; left: 603px; top: 321px;" data-block-id="7a4c92c898dd9de6c0ad22bb19c781d8"><div class="sl-block-style" style="z-index: 16;"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 16;" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 328 119"><rect width="328" height="119" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 298px; left: 618px; top: 335px;" data-block-id="c5564b1e6e8cd47149c2ceb26acd04a0"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 17;" data-fragment-index="0">
<p><span style="font-size:0.7em">The <strong>superclass </strong>of the BasicObject metaclass <em> </em>is <em>Class</em></span></p>
</div></div></section><section data-id="e1288f495b8512084483b1bfea5a4af5"><div class="sl-block" data-block-type="text" style="width: 901px; left: 12px; top: 24px; height: auto;" data-block-id="c39773c3456d357a64a30faadce4f650"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10; color: rgb(255, 66, 95);">
<h2>super of &lt;Dog&gt;?</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 937px; height: 525px; left: 12px; top: 105px;" data-block-id="eb45e8177a0f8231fdaa610011530f50"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="cpp"><code>static inline VALUE make_metaclass(VALUE klass)
{
  VALUE super;
  VALUE metaclass = rb_class_boot(Qundef);

  FL_SET(metaclass, FL_SINGLETON);
  rb_singleton_class_attached(metaclass, klass);

  if (META_CLASS_OF_CLASS_CLASS_P(klass)) {
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, metaclass);
  }
  else {
    VALUE tmp = METACLASS_OF(klass); 
    SET_METACLASS_OF(klass, metaclass);
    SET_METACLASS_OF(metaclass, ENSURE_EIGENCLASS(tmp));
  }

  super = RCLASS_SUPER(klass);
  while (RB_TYPE_P(super, T_ICLASS)) super = RCLASS_SUPER(super);
  RCLASS_SET_SUPER(metaclass, super ? ENSURE_EIGENCLASS(super) : rb_cClass);

  OBJ_INFECT(metaclass, RCLASS_SUPER(metaclass));

  return metaclass;
}</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 750px; height: 75px; left: 33px; top: 460px;" data-block-id="eec47939b0a5886f1bb7f485cdcb169c"><div class="sl-block-content" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 12;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 750 75"><defs><clippath id="shape-mask-28-1498041040937"><rect width="750" height="75"></rect></clippath></defs><rect width="750" height="75" clip-path="url(#shape-mask-28-1498041040937)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 44px; left: 800px; top: 478px;" data-block-id="e652971983077e833358be24e0ddff04"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; background-color: rgb(255, 66, 95); color: rgb(255, 255, 255);">
<p><strong>3</strong></p>
</div></div>

<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 392px; top: 526px;" data-block-id="2946ed8873a67e28b8443b91f6f2d591"><div class="sl-block-content fragment" data-line-x1="218" data-line-y1="179" data-line-x2="466" data-line-y2="179" data-line-color="#ff425f" data-line-start-type="none" data-line-end-type="none" style="z-index: 14;" data-line-width="5px" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="248" height="1" viewbox="218 179 248 1"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="218.5" y1="179.5" x2="466.5" y2="179.5"></line><line stroke="#ff425f" stroke-width="5" x1="218.5" y1="179.5" x2="466.5" y2="179.5"></line></svg></div></div>
<div class="sl-block" data-block-type="line" style="width: auto; height: auto; left: 640px; top: 438px;" data-block-id="8bc9a0b2ac63f7a5bfe5954d7afed953"><div class="sl-block-content fragment" data-line-x1="376" data-line-y1="357" data-line-x2="438" data-line-y2="290" data-line-color="#ffffff" data-line-start-type="none" data-line-end-type="arrow" style="z-index: 15;" data-line-width="5px" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" preserveaspectratio="xMidYMid" width="62" height="67" viewbox="376 290 62 67"><line stroke="rgba(0,0,0,0)" stroke-width="15" x1="376.5" y1="357.5" x2="433.5" y2="296.5"></line><line stroke="#ffffff" stroke-width="5" x1="376.5" y1="357.5" x2="433.5" y2="296.5"></line><polygon fill="#ffffff" transform="translate(433,296) rotate(42.78)" points="0,-7.5 7.5,7.5 -7.5,7.5"></polygon></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 328px; height: 119px; left: 603px; top: 321px;" data-block-id="aabb347088ae2f593f7036145f3e0299"><div class="sl-block-style" style="z-index: 16;"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 16;" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 328 119"><rect width="328" height="119" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 298px; left: 618px; top: 321px;" data-block-id="091527263588c9caecfc6d7dba4fd198"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 18;" data-fragment-index="0">
<p><span style="font-size:0.7em">The <strong>superclass </strong>of the Dog metaclass is the <em><strong>metaclass </strong>of Dog's superclass</em></span></p>
</div></div></section><section data-id="55f42e8c265d65727be19a4d20e97994"><div class="sl-block" data-block-type="image" style="width: 896px; height: 616px; left: 0px; top: 14px;" data-block-id="077d6630446b1417fe8330f2a81f4b87"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/33195ecc177e4e5784c86657ac8ee35b.png"></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 307px; left: 13px; top: 90px;" data-block-id="ae3c257b3b74484111aa3ad4806fac43"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 11; color: rgb(255, 66, 95); text-align: center;">
<p><strong>CONGRATULATIONS</strong></p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 307px; left: 7px; top: 156px;" data-block-id="df73472be8bf9c17e7ad0dcc482557ec"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; color: rgb(255, 66, 95); text-align: center;" data-fragment-index="0">
<p>Boromir was right</p>
</div></div></section><section data-id="e93f3353e6670aae8c453432ef1cfda3"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 921px; height: 614px; left: 20px; top: 16px;" data-block-id="7919b8a788068ba9141f74569024319b"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="600" data-natural-height="400" data-lazy-loaded="" data-src="deck/cb6921732f48fa3b151272b350a41787.jpg"></div></div></section><section data-id="4351915cd733872218a6f102c648c1c9"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="a56a7a1704366f7d3144845de7e3efbb"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 10;">
<h2>Make me a &lt;doge&gt;</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 960px; height: 311px; left: 0px; top: 120px;" data-block-id="cb5a0b608fea1e3fe3a7e32e6103bf65"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="cpp"><code>static inline VALUE make_singleton_class(VALUE obj)
{
    VALUE orig_class = RBASIC(obj)-&gt;klass;
    VALUE klass = rb_class_boot(orig_class);
    FL_SET(klass, FL_SINGLETON);
    
    RBASIC_SET_CLASS(obj, klass);
    rb_singleton_class_attached(klass, obj);

    SET_METACLASS_OF(klass, METACLASS_OF(rb_class_real(orig_class)));
    return klass;
}

</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 413px; height: 75px; left: 39px; top: 159px;" data-block-id="3b5cd9ff75fd0254ba165c414a91fd39"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 12;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 413 75"><defs><clippath id="shape-mask-29-1498041045764"><rect width="413" height="75"></rect></clippath></defs><rect width="413" height="75" clip-path="url(#shape-mask-29-1498041045764)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 413px; height: 50px; left: 39px; top: 240px;" data-block-id="4273064d8bf20d10aece4c543e3bd420"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 15;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 413 50"><defs><clippath id="shape-mask-30-1498041045769"><rect width="413" height="50"></rect></clippath></defs><rect width="413" height="50" clip-path="url(#shape-mask-30-1498041045769)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="width: 661px; height: 30px; left: 39px; top: 299px;" data-block-id="619098a52d9f21e383a2a9e156c2e791"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 16;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 661 30"><defs><clippath id="shape-mask-31-1498041045773"><rect width="661" height="30"></rect></clippath></defs><rect width="661" height="30" clip-path="url(#shape-mask-31-1498041045773)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 44px; left: 468px; top: 177px;" data-block-id="f4a614442c92f80145b5849251e37951"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14; background-color: rgb(255, 66, 95); color: rgb(255, 255, 255);" data-fragment-index="0">
<p><strong>1</strong></p>
</div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 388px; height: 88px; left: 543px; top: 126px;" data-block-id="1a43106fca6ed737e3b4bcafe29a549e"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 17;" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 388 88"><rect width="388" height="88" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 380px; left: 547px; top: 122px;" data-block-id="d2bac294a1d9d86daf89d64d2011e6ec"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 18; line-height: 0.975;" dir="ui" data-fragment-index="0" data-has-line-height="">
<p><span style="font-size:0.7em">Initialize singleton class as new RClass struct whose super is the original class; set singleton flag</span></p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 44px; left: 468px; top: 246px;" data-block-id="973f91638925cb947d9a70f7ec4e4630"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 19; background-color: rgb(255, 66, 95); color: rgb(255, 255, 255);" data-fragment-index="1">
<p><strong>2</strong></p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 380px; left: 560px; top: 228px;" data-block-id="4d881019ce84b9f685dd20b07eec6a5d"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 21; line-height: 0.975;" dir="ui" data-fragment-index="1" data-has-line-height="">
<p><span style="font-size:0.7em">Set doge's <strong>klass</strong> to point to the new singleton class</span></p>
</div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 388px; height: 69px; left: 543px; top: 223px;" data-block-id="a06cf6c0cf1728346b8baee3d1d667ad"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 20;" data-fragment-index="1"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 388 69"><rect width="388" height="69" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="shape" style="min-width: 4px; min-height: 4px; width: 388px; height: 69px; left: 543px; top: 350px;" data-block-id="1d16974500748e00b5e45c490a36780c"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgb(238, 238, 238)" data-shape-stretch="true" style="z-index: 22;" data-fragment-index="2"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 388 69"><rect width="388" height="69" class="shape-element" fill="rgb(238, 238, 238)"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 44px; left: 715px; top: 299px;" data-block-id="23b0a08ea6fb8d68ded890e53d4cc55d"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 23; background-color: rgb(255, 66, 95); color: rgb(255, 255, 255);" data-fragment-index="2">
<p><strong>3</strong></p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 380px; left: 547px; top: 355px;" data-block-id="cc95b9bd331aa2ea46c612c13900aca5"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 24; line-height: 0.975;" dir="ui" data-fragment-index="2" data-has-line-height="">
<p><span style="font-size:0.7em">Set the doge singleton class's <strong>klass</strong> to point to the <em>Class metaclass</em></span></p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 195px; left: 383px; top: 446px;" data-block-id="dbfb089648f98d273dc44e8b33a89e82"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 25;">
<pre style="text-align:center"><span style="font-size:0.5em">(class.c)</span></pre>
</div></div></section><section data-id="df170c4fb0fa587c421473912d4abef8"><div class="sl-block" data-block-type="image" style="width: 896px; height: 616px; left: 0px; top: 14px;" data-block-id="2d0927fc98618ab4c8698210db927ec4"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/be7e0f70672f80aa78d5061c6c2fc479.jpeg"></div></div>
</section><section data-id="c0ddd63e9b6c7f067b845cdb0793464e"><div class="sl-block" data-block-type="text" style="width: 806px; left: 80px; top: 210px; height: auto;" data-block-id="e36bd408c0eeed8787f90aa411ad82e9"><div class="sl-block-content" data-placeholder-tag="h1" data-placeholder-text="Title Text" style="z-index: 11;">
<h1>Wait, what about <strong>modules</strong>?</h1>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 180px; top: 453px;" data-block-id="5cbd4805965cf4d43f0bdeeb5603b3d4"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12; color: rgb(255, 66, 95);" data-fragment-index="0">
<h2>Include Classes</h2>
</div></div></section><section data-id="e305b72245ffa46152d03cbc1b5742e1"><div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 289px; height: 109px; left: 64px; top: 140px;" data-block-id="73e6f78f5ab01303aa624e14cab75bf2"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 15; font-size: 130%;" data-fragment-index="0"><pre class="ruby"><code>class Dog
  include Saberteeth
  # ...
end</code></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 160px; top: 21px;" data-block-id="16a3fa7b93eb7e875978b60b9215bad5"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 16;">
<h1>Saberdoge</h1>
</div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 649px; height: 714px; left: 311px; top: 70px;" data-block-id="fd28354c54df55cd7da5d00e31e34af7"><div class="sl-block-content fragment" style="z-index: 10;" data-fragment-index="0"><img style="" data-natural-width="1000" data-natural-height="1100" data-lazy-loaded="" data-src="deck/5709ea5f71b019dafa665300c1663957.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 649px; height: 714px; left: 311px; top: 70px;" data-block-id="b1956f34017f53d3fd5566224158f8f4"><div class="sl-block-content fragment" style="z-index: 11;" data-fragment-index="1"><img style="" data-natural-width="1000" data-natural-height="1100" data-lazy-loaded="" data-src="deck/2fb624e5306a39087aa027c26603886a.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 649px; height: 714px; left: 311px; top: 70px;" data-block-id="8bb59ab6c391a1ab8d5d6930049029d7"><div class="sl-block-content fragment" style="z-index: 12;" data-fragment-index="2"><img style="" data-natural-width="1000" data-natural-height="1100" data-lazy-loaded="" data-src="deck/a1c8e965b4b0a44c9df7d681775f332a.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 455px; height: 364px; left: 25px; top: 266px;" data-block-id="4a0aec0a8654a1f26307a098e9b97b7e"><div class="sl-block-content" style="z-index: 17;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/2e19e129b50c51b9f1629450b5f3f65e.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 649px; height: 714px; left: 312px; top: 70px;" data-block-id="ac0af9ac2efb5cc870ff3e0347f566cc"><div class="sl-block-content fragment" style="z-index: 14;" data-fragment-index="3"><img style="" data-natural-width="1000" data-natural-height="1100" data-lazy-loaded="" data-src="deck/6fc47f50b4ddab3941679a691fb05c82.png"></div></div></section><section data-id="384323e92be8607a8f09059c08fdc12a"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="e69687271ff7b53c3b70079a1a0130bf"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 11;">
<h2>Make me an include class</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 960px; height: 241px; left: 0px; top: 116px;" data-block-id="1cf16eb9948014e9ca9b582c39e2750c"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 12;"><pre class="cpp"><code>static int
include_modules_at(const VALUE klass, VALUE c, VALUE module, int search_super)
{
    // check for duplicate includes, cyclic includes,
    // modules included in modules, modules included in refinements...

    iclass = rb_include_class_new(module, RCLASS_SUPER(c));
    c = RCLASS_SET_SUPER(c, iclass);

    // ...
}


</code></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 195px; left: 383px; top: 368px;" data-block-id="2bc40983ae7ae310f7024f210db3ca56"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13;">
<pre style="text-align:center"><span style="font-size:0.5em">(class.c)</span></pre>
</div></div>
</section><section data-id="48bcc440fa5a8a220f092a13861d3399"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 759px; height: 835px; left: 68px; top: -20px;" data-block-id="c1611aa2c38f986981c5c7e6745d6646"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1000" data-natural-height="1100" data-lazy-loaded="" data-src="deck/6fc47f50b4ddab3941679a691fb05c82.png"></div></div></section><section data-id="e894e835be2c06b46485f6707a551bc2"><div class="sl-block" data-block-type="code" style="width: 308px; height: 148px; left: 53px; top: 140px;" data-block-id="6ce18d5f36fab5a4cc2f3148413a079a"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 14; font-size: 130%;"><pre class="ruby"><code>class Dog
  include Saberteeth
  include Sunglasses
  # ...
end</code></pre></div></div>
<div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="ce9b9d8da8754571b076f9bf72c7c835"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 11;">
<h2>Multiple Include Classes</h2>
</div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 373px; height: 522px; left: 442px; top: 108px;" data-block-id="fd3e9a5c074de92625294c7af87a34e7"><div class="sl-block-content fragment" style="z-index: 12;" data-fragment-index="1"><img style="" data-natural-width="681" data-natural-height="954" data-lazy-loaded="" data-src="deck/8404718f4ddf9df8f5304b58185e4602.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 460px; height: 368px; left: 20px; top: 262px;" data-block-id="9b31f920a5366d2a390a63a4dd4314be"><div class="sl-block-content fragment" style="z-index: 13;" data-fragment-index="0"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/955a96ccf6574d119084719b0a651fdf.png"></div></div></section><section data-id="7acc8f1746c5767678c614ccc8053f4e"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="8054b235b5e295b3c695f1e108d6d1b6"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 11;">
<h2>Make me an include class</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 960px; height: 241px; left: 0px; top: 116px;" data-block-id="07a28f01a28136401441208cb8144de6"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 12;"><pre class="cpp"><code>static int
include_modules_at(const VALUE klass, VALUE c, VALUE module, int search_super)
{
    // check for duplicate includes, cyclic includes,
    // modules included in modules, modules included in refinements...

    iclass = rb_include_class_new(module, RCLASS_SUPER(c));
    c = RCLASS_SET_SUPER(c, iclass);

    // ...
}


</code></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 195px; left: 383px; top: 368px;" data-block-id="6360ff9024fd191b97408fb251cb8158"><div class="sl-block-content" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13;">
<pre style="text-align:center"><span style="font-size:0.5em">(class.c)</span></pre>
</div></div>
<div class="sl-block" data-block-type="shape" style="width: 282px; height: 26px; left: 67px; top: 198px;" data-block-id="0b178dfe2356ee7b2f55483782916c5c"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 14;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 282 26"><defs><clippath id="shape-mask-32-1498041049607"><rect width="282" height="26"></rect></clippath></defs><rect width="282" height="26" clip-path="url(#shape-mask-32-1498041049607)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 200px; top: 459px;" data-block-id="598ffbba0e21940df7ed5c9d741113dd"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 15; color: rgb(255, 66, 95);" dir="ui" data-fragment-index="1">
<h3>Including modules in modules?</h3>
</div></div></section><section data-id="1928491ea4cb31116e01f5dccb84483d"><div class="sl-block" data-block-type="text" style="width: 413px; left: 29px; top: 84px; height: auto;" data-block-id="cb546edd906527dabcd15518d0b1c517"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="text-align: left; z-index: 10;">
<h2>Modules and Include Classes are also <strong><em>RClass structs</em></strong>
</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 500px; height: 195px; left: 427px; top: 225px;" data-block-id="be995f006c8bacbf65dcf6185ca9cea1"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11; font-size: 148%;"><pre class="cpp"><code>struct RClass {
    struct RBasic basic;
    VALUE super;
    rb_classext_t *ptr;
    struct rb_id_table *m_tbl;
};</code></pre></div></div>
<div class="sl-block" data-block-type="shape" style="width: 197px; height: 35px; left: 480px; top: 286px;" data-block-id="e10ca68fa552e5e7006f76d3df713caa"><div class="sl-block-content fragment" data-shape-type="rect" data-shape-fill-color="rgba(0, 0, 0, 0)" data-shape-stretch="true" style="z-index: 13;" data-shape-stroke-color="#ff425f" data-shape-stroke-width="5" data-fragment-index="0"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" preserveaspectratio="none" viewbox="0 0 197 35"><defs><clippath id="shape-mask-33-1498041050130"><rect width="197" height="35"></rect></clippath></defs><rect width="197" height="35" clip-path="url(#shape-mask-33-1498041050130)" class="shape-element" fill="rgba(0, 0, 0, 0)" stroke="#ff425f" stroke-width="10"></rect></svg></div></div></section><section data-id="0649443eead86fa5e1fe6aefdde6a33d"><div class="sl-block" data-block-type="text" style="width: 806px; left: 66px; top: 227px; height: auto;" data-block-id="5d34eabe35e6bbc1485eb17f6dcb79ed"><div class="sl-block-content" data-placeholder-tag="h1" data-placeholder-text="Title Text" style="z-index: 10;">
<h1>Can modules have a <strong>super</strong>?</h1>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 169px; top: 432px;" data-block-id="0b306104e14fc4bdb1f4b760171ca3ed"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 11; color: rgb(255, 66, 95);" data-fragment-index="0">
<p>Yes, but not by default</p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 169px; top: 482px;" data-block-id="ce4653f21ab84c123aead9f9114f5aff"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; color: rgb(255, 66, 95);" data-fragment-index="1">
<p><strong>super</strong> comes in handy when we include modules in modules</p>
</div></div></section><section data-id="52ba522d4c050bc2b8b796f7defc91e8"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="6a44a1a4af5381763f67f88949fca1d8"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 11;">
<h2>Sabersunglass Doge</h2>
</div></div>
<div class="sl-block" data-block-type="image" style="width: 726px; height: 581px; left: 400px; top: 42px;" data-block-id="46460cec63617a689a5a3233b6b3c5c5"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/93a73ec68935f0842147e75506f9dbc3.png"></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 393px; height: 225px; left: 28px; top: 226px;" data-block-id="86e3dc16971d1c243cf9c059efb24b14"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 13; font-size: 148%;"><pre class="ruby"><code>module Sunglasses
  include Saberteeth
end

class Dog
  include Sunglasses
end</code></pre></div></div></section><section data-id="88ff53938d1de66252d0428121065727"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="346eec5b1472375fb7f02ca86e429c6c"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 11;">
<h2>Module in a module</h2>
</div></div>
<div class="sl-block" data-block-type="code" style="width: 393px; height: 95px; left: 19px; top: 280px;" data-block-id="c6c381cc6e85bad38c88b4a4fe6e74f8"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 12; font-size: 148%;"><pre class="ruby"><code>module Sunglasses
  include Saberteeth
end
</code></pre></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 480px; height: 514px; left: 436px; top: 116px;" data-block-id="ffbf930e8399ca0ee6aed42612f253f2"><div class="sl-block-content fragment" style="z-index: 10;" data-fragment-index="0"><img style="" data-natural-width="891" data-natural-height="954" data-lazy-loaded="" data-src="deck/72dbea0d4d250b32301dc8e1f150b539.png"></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 480px; height: 514px; left: 436px; top: 116px;" data-block-id="b2a2692d15579f96d767a58da1f621df"><div class="sl-block-content fragment" style="z-index: 14;" data-fragment-index="1"><img style="" data-natural-width="891" data-natural-height="954" data-lazy-loaded="" data-src="deck/856d703c47d887346b7ee3a03ddf1d69.png"></div></div></section><section data-id="cb97c065389eda2c3c86e01dcec11311"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 617px; height: 617px; left: 0px; top: 13px;" data-block-id="a82350efa4a1dbb02d626ca434d3483f"><div class="sl-block-content" style="z-index: 10;"><img style="" data-natural-width="900" data-natural-height="900" data-lazy-loaded="" data-src="deck/6c8a1bdd88b77d9cbc82647f8ba387ce.png"></div></div>


<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 350px; left: 545px; top: 346px;" data-block-id="17e8c691ad7c8aa3bb7bbb87f7f4eb47"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; color: rgb(255, 66, 95);" data-fragment-index="3">
<p>singleton class and metaclass creation</p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 350px; left: 545px; top: 451px;" data-block-id="4e1d416f75e3487eceaffeb70d507b19"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14;" data-fragment-index="4">
<p>how modules work</p>
</div></div>

<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 350px; left: 545px; top: 241px;" data-block-id="751b916c00317b4bfa1e51972634794b"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 17;" data-fragment-index="0">
<p>how objects and classes are represented</p>
</div></div>
</section><section data-id="8f9e8148dd6942b3f3d7b499817c3703"><div class="sl-block" data-block-type="text" style="width: 806px; left: 77px; top: 42px; height: auto;" data-block-id="a188180fb9f610896c03180b0d144265"><div class="sl-block-content" data-placeholder-tag="h2" data-placeholder-text="Title Text" style="z-index: 11;">
<h2>Just to clarify...</h2>
</div></div>
<div class="sl-block" data-block-type="table" style="height: auto; min-width: 120px; min-height: 30px; width: 706px; left: 107px; top: 210px;" data-block-id="77cf2f6096d5a3576536b876181a4c01"><div class="sl-block-content" style="z-index: 12; text-align: center; color: rgb(255, 66, 95); font-size: 183%;" data-table-border-color="rgba(0, 0, 0, 0)" data-table-cols="2"><table><tbody>
<tr>
<th style="border-color: rgba(0, 0, 0, 0);">C</th>
<th style="border-color: rgba(0, 0, 0, 0);">Ruby</th>
</tr>
<tr>
<td style="border-color: rgba(0, 0, 0, 0);">klass</td>
<td style="border-color: rgba(0, 0, 0, 0);">class</td>
</tr>
<tr>
<td style="border-color: rgba(0, 0, 0, 0);">super</td>
<td style="border-color: rgba(0, 0, 0, 0);">superclass</td>
</tr>
</tbody></table></div></div></section><section data-id="c817e3e1e6fce0bf96c712e9b69c976f"><div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 320px; height: 124px; left: 50px; top: 140px;" data-block-id="66972763bc8443eb384a0e238d36f192"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="ruby"><code>BasicObject.class # =&gt; Class
Object.class # =&gt; Class
Module.class # =&gt; Class
Class.class # =&gt; Class
Dog.class # =&gt; Class</code></pre></div></div>
<div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 854px; height: 587px; left: 106px; top: 21px;" data-block-id="46555eded29aa905d30af1478255e3c1"><div class="sl-block-content fragment" style="z-index: 10;" data-fragment-index="0"><img style="" data-natural-width="1600" data-natural-height="1100" data-lazy-loaded="" data-src="deck/7045d509da783651ff7194104cda6e1a.png"></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 124px; left: 24px; top: 420px;" data-block-id="2db68e8f03e26c76535380be5462eba5"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12;" data-fragment-index="1">
<p>Ruby's</p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 124px; left: 148px; top: 423px;" data-block-id="a9cf4dc3d16aae78f66737ab71b84341"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14; color: rgb(255, 66, 95);" data-fragment-index="1">
<pre>class</pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 263px; left: 37px; top: 459px;" data-block-id="3f363e69da7df02e278d202b1827785d"><div class="sl-block-style" style="z-index: 15; transform: rotate(360deg);"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 15;" data-fragment-index="1">
<p style="text-align:left">ignores singleton classes &amp; include classes</p>
</div></div></div></section><section data-id="a37b75e6760cbc2c1ee085d306b7b8e5"><div class="sl-block" data-block-type="code" style="width: 320px; height: 124px; left: 50px; top: 165px;" data-block-id="467e4bce2e6e0c1a6771cc9443ad775c"><div class="sl-block-content" data-highlight-theme="zenburn" style="z-index: 11;"><pre class="ruby"><code>class Dog
  include Saberteeth
end

Dog.superclass # =&gt; Object</code></pre></div></div>
<div class="sl-block" data-block-type="image" style="width: 726px; height: 799px; left: 240px; top: -49px;" data-block-id="5bb41f5e9eb11fc1eb00746e93cc4762"><div class="sl-block-content fragment" style="z-index: 10;" data-fragment-index="0"><img style="" data-natural-width="1000" data-natural-height="1100" data-lazy-loaded="" data-src="deck/6fc47f50b4ddab3941679a691fb05c82.png"></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 124px; left: 24px; top: 420px;" data-block-id="f60bb815c97cba627ec3e95ca08e88bb"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 12;" data-fragment-index="0">
<p>Ruby's</p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 191px; left: 148px; top: 423px;" data-block-id="fc6fd90d6a622e1bdca50b2e8da8deca"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 13; color: rgb(255, 66, 95);" data-fragment-index="0">
<pre>superclass</pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; width: 263px; left: 39px; top: 459px;" data-block-id="be9ef1c4779976a961137f67a92bfbdc"><div class="sl-block-style" style="z-index: 14; transform: rotate(360deg);"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14;" data-fragment-index="0">
<p style="text-align:left">ignores include classes</p>
</div></div></div></section><section data-id="0ff5e9a4b7fc9c4c34185c8d576d9f68"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 619px; height: 619px; left: 160px; top: 28px;" data-block-id="08eef0300fe6b76028848640bb985a26"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/90b4020d81918d67d5181982c3257254.png"></div></div></section><section data-id="eedd68bdacaae0d3dcf0566896828a24"><div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 600px; left: 225px; top: 46px;" data-block-id="56ba3a35d82ce481932a6ab9eedd143f"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 10;" data-fragment-index="0">
<pre style="text-align: center;">class_eval vs instance_eval</pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 331px; left: 45px; top: 104px;" data-block-id="212830b82a47fe41dbdb07fcc8465bf4"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 11; color: rgb(255, 66, 95);" data-fragment-index="1">
<pre style="text-align:center">include vs extend (vs prepend)</pre>
</div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 218px; height: 150px; left: 416px; top: 124px;" data-block-id="86a5bac60db89ec4e38726cbb03432e5"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 12;" data-fragment-index="2"><pre class="ruby"><code>module Sunglasses
  include Saberteeth
end

class Dog
  include Sunglasses
end</code></pre></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 218px; height: 150px; left: 725px; top: 124px;" data-block-id="544956bc0dc7d3fce7b412bcf1038a53"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 13;" data-fragment-index="2"><pre class="ruby"><code>class Dog
  include Sunglasses
end

module Sunglasses
  include Saberteeth
end
</code></pre></div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 60px; left: 648px; top: 171px;" data-block-id="c2c9b1b399e00628a750bf3910856bb8"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 14;" data-fragment-index="2">
<p>vs</p>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 780px; left: 100px; top: 306px;" data-block-id="0dfb7b3f02f0213d2facc29ce016802b"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 16; color: rgb(255, 66, 95);" data-fragment-index="4">
<pre style="text-align:center">class variables vs class instance variables</pre>
</div></div>
<div class="sl-block" data-block-type="text" style="height: auto; min-width: 30px; min-height: 30px; width: 293px; left: 53px; top: 210px;" data-block-id="ea5fa34d00067c68e698329dbd4dad9a"><div class="sl-block-content fragment" data-placeholder-tag="p" data-placeholder-text="Text" style="z-index: 17;" data-fragment-index="3">
<p>class &lt;&lt; self; end</p>
</div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 218px; height: 239px; left: 64px; top: 371px;" data-block-id="8d76bda193366780cfb186622689e184"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 18;" data-fragment-index="5"><pre class="ruby"><code>module A
  def a_method; end
end

module B
  extend A
end

module C
  extend B
end
</code></pre></div></div>
<div class="sl-block" data-block-type="code" style="min-width: 30px; min-height: 30px; width: 550px; height: 81px; left: 320px; top: 457px;" data-block-id="3f30a7535099004a4f8427a4b443f614"><div class="sl-block-content fragment" data-highlight-theme="zenburn" style="z-index: 19; font-size: 169%;" data-fragment-index="6"><pre class="ruby"><code># should I expect this to work??
C.a_method</code></pre></div></div></section><section data-id="312d38c1fc5ee1af30eeaf36611da761"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 613px; height: 613px; left: 174px; top: 17px;" data-block-id="0b395444c0db93b4733ba2ca76871508"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="800" data-natural-height="800" data-lazy-loaded="" data-src="deck/3b871a2e72661583aed90a932dee1955.png"></div></div></section><section data-id="751d5377aad1df1fe772198b6557b35a"><div class="sl-block" data-block-type="image" style="width: 763px; height: 610px; left: 160px; top: 19px;" data-block-id="efea00afae3670bb2854d00705d6c91e"><div class="sl-block-style" style="z-index: 11;"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/08c41f447f61d115e100e345e016a496.png"></div></div></div></section><section data-id="6cb5cfd434c586091808911e49d34fb8"><div class="sl-block" data-block-type="image" style="min-width: 30px; min-height: 30px; width: 769px; height: 615px; left: 96px; top: 15px;" data-block-id="0e75d5d648e3d823971a8a02c8791e8e"><div class="sl-block-content" style="z-index: 11;"><img style="" data-natural-width="1000" data-natural-height="800" data-lazy-loaded="" data-src="deck/c86f97b07ba9f6dca19e897029ac04c8.png"></div></div></section>
			</div>
		</div>

		<script>
			var SLConfig = {"deck": {"id":993805,"slug":"deck","title":"All I'd Wanted to Know About Ruby's Object Model Starting Out...And Moaar!!","description":"","width":960,"height":700,"visibility":"all","published_at":"2017-05-02T15:15:14.184Z","sanitize_messages":null,"thumbnail_url":"https://s3.amazonaws.com/media-p.slid.es/thumbnails/db851bb956725918b2be4f337f084c16/thumb.jpg?953892375","view_count":6,"user":{"id":705183,"username":"aquietimmanence","name":"A Quiet Immanence","description":null,"thumbnail_url":"https://www.gravatar.com/avatar/e0671e7e1315b340362be618e5ecdbe6?s=140\u0026d=https%3A%2F%2Fs3.amazonaws.com%2Fstatic.slid.es%2Fimages%2Fdefault-profile-picture.png","paid":true,"pro":false,"lite":true,"team_id":null,"settings":{"id":554756,"present_controls":true,"present_upsizing":true,"present_pointer":false,"present_notes":true}},"background_transition":"fade","transition":"fade","theme_id":null,"theme_font":"montserrat","theme_color":"white-blue","auto_slide_interval":0,"comments_enabled":true,"forking_enabled":true,"rolling_links":false,"center":false,"should_loop":false,"share_notes":false,"slide_number":false,"rtl":false,"version":2,"collaborative":null,"deck_user_editor_limit":1,"data_updated_at":1498041152453,"font_typekit":null,"font_google":null,"notes":{"fb73f6bfddcc47e393ef044cff641ee4":"Hello everybody! I'm Jun Qi, I'm a final year student at the Singapore University of Technology and Design, and I was introduced to the world of Ruby, and web development through Rails, about one and half years ago.\n","f05c54f063419a45fe1b77c64a63bab6":"So my talk today is called \"All I'd Wanted to Know About Ruby's Object Model Starting Out\"\n","de64a327ef16965b034adc2a21769760":"and moaar!!!\nBut before diving into the topic proper, I want to talk a little bit about the motivations behind this.","167762402ba75ce91a3f2720703d0ee2":" So why this talk, and why this topic.\n\nI mean, if you ask me why this talk the first thing I'm going to say to you is ","31b4eed679ce03a29cf15decfec13102":"\"FREE RDRC TICKETS YAYEEEY!!!!\". \n\n\n","ebe87ecc37f04201e41cb9e5593ba2f0":"But I also want to approach this as someone who still has a lot to learn, about the language, and about programming in general.\n","1ddcabae469befa176ed570491347216":"So, I have this question: \"What is it like to be a beginner learning Ruby?\" And I'm going to give a very quick outline of my personal experience.\n\n\n","fd1aef7acd31b95c52446050665df8ff":"So at the beginning everything feels really beautiful and great, right. The language is clean, clutter-free, expressive,\n","1eb9764cb2c9d7143b52464307da7a2e":"sometimes even reads like English (pause)\n","ae671a6a6cb3eeb20b0d5e7d32683d8a":"Blocks, procs and enumerators are slightly strange, but you get the hang of it after a while.\n","d1b14387cc6705ba0280f66e092931b8":"The mechanics of the basic object-oriented paradigm are not too hard to pick up, and pretty soon you're fairly comfortable writing your own classes, subclassing them, and mixing in modules.\n","ca5ce09bdb732225f51347a836c71a06":"And so you're in love\n","4e6650bb642f2dff543ea896a78e6f18":"But if you hang around with Ruby long enough, you start seeing fun stuff like this (class_eval), ","642724a53757ba6b93d0b9f2731d35cd":"and this(`class \u003c\u003c self`), and you hear stuff like singleton methods, metaclass, extending modules instead of including them, and a lot of head-scratching ensues.\n","9a6aaabf973350af3d59673ae418e1c7":"And maybe you keep reading and re-reading Ruby docs and various blogposts, but you still keep forgetting the difference between `class_eval` and `instance_eval`, or you still don't quite understand what that `self.included` hook does down there, and you realize you should be able to do better.\n\nYou should be able to build a mental model that has the explanatory power of unifying all these strange and disparate bits of Ruby.\n\nSo that's what I set out to do.","3cbdcac3dd4557d9f8334f3cae28045e":"And that's basically all I'd wanted to know about RUby's Object Model starting out\n\nBut, because...","ae69a05b197090013c77d37f98fcee04":"I have completionist tendencies, I actually decided to dive into the CRuby source itself, and that's where the ","b87cb40aa10729c7b2c979d93c198265":"MOAAAR comes in.\n\nSo without further ado, here's All I'd Wanted to Know About Ruby's Object Model Starting Out. But because alot of the times I think I actually enjoy telling stories and drawing silly things more than programming itself, I'm going to narrate this to you as a grand illustrated myth.\n\nSo in the beginning, there was...\n\n","1b1aede4e749f05128626bc3ca98dc39":"...Chaos.\n\n But soon from that primordial soup of procedural code there sprung forth typedefs and macros and these gradually coalesced\n","b9541b2fc2b3145e464f7ad4c2763a07":" into the finest of all rubies.\n\n","6fd6e9b5c6fc1cf89fe1c234743f737c":"And Ruby said, \"Let Us make objects, but not in Our image nor likeness, for I am a jealous Ruby and I want to be the shiniest Ruby there is.\"\n\nAnd so was wrought the plainest of all objects, ","f2726c7bccc3340aa53f6ad9ef94f94d":"BasicObject. ","0f40bfb165467b68eff43cccdd2dfc77":"And BasicObject knew Kernel, and unto them was conceived and born","69509cd814a9c26710bb5d3fd78817da":" Object; and Object begot \n\n","163065a1202621bb5d57406ec0120e09":"Module; and Module ","e9529a850b4e622fc44721369c214208":"begot Class.","0787a1f2a4475560638cb751bf8a33ee":"(pause)\n\nNow Ruby had given her creations dominion across the land, and so Object set forth ","f844a1e5a0389584bb1f0f64e15a32c2":"and begot many other classes, and soon enough these classes had materialized their multitudes of concrete instances that spread across the code of the very many Ruby programmers in this world.\n\n","3a4770e3cb1851150777f0a80e90340f":"And this was the world that all the objects knew, and it was great and happy.\n\nBut Ruby had also furnished her creations with a very special power, which was soon to precipitate a great existential crisis. It was the power of ","05f7888520e9f1beb1009968c279a045":"introspection.\n","9e567022bc66320d654a63e6e20b7534":"And so it was that one of the first objects, doge, began to ask: ","5be72ac396a31139ec2669d03ad47419":"\"What am I?\"\n\nAnd he discovered that he could simply call the method `class`, and the answer was ","88fcfb3d4669dc2c710a36932b43d675":"as plain as day, and the existential crisis passed.\n\n","b6cc910009784b1008b9dbeb9729e366":"But even as doge was content with the answer to that pressing question,\n\n","f9be7812d74510dbc85352da149c6bf5":" it was not long before Dog thought to ask the same. And so Dog called the method `class`, and discovered that what he was, was a Class. ","4a8b6eaa6f798352cf04345c726572ee":"But he discovered that he could also call `superclass`, and remembered that his parent was Object. ","af84930feb4206d640b0f198738e6f88":"And Dog knew what he was, and where he came from, and so he was content.","2ca9bfaf1788612b6d8af1db2bf39bf7":"Yet this was not the end. Soon even the most ancient of objects began to question their own existence. BasicObject, Object, Module, Class, all of them asked, ","f8c928488b59e8b97831fdd976f1772f":"\"What am I?\" And it turned out that ","dabfc15e1b6e940d4207587de8d88cdc":"all of them were ","d2120a77cb4874c2539082dbcb392918":"Classes, and they remembered","ee25b3c13a3974c323e44107d080f39b":" whom begot whom. Kernel asked herself the same question, \n","201866ade6c92f6bef3da145e9723c7d":"and discovered that she was a Module, and remembered that she had no parent to speak of. And so this was the world that all the objects knew, and some thought the arrows were getting a little bit messed up, but they lived with it.\n\nAlas, the first wave of the crisis was over, but now doge began agonizing again. ","30dc949ce28285a3ab59c16ea606d91b":"He looked at Dog and complained, \"You say that as a Dog, I should only be able to bark, and wag my tail, and be stroked on my belly. I know that I am different from the other dog instances; I weigh different and so on. But truly I want more individuality than that! I want the means and the methods for manifesting my singly doge-nature. Not just to bark but to go, 'So Doge!' and 'Such Wow!'\" And Dog looked at him and shook his head, for he knew not what he could do.\n\n\nBut in the night, doge was visited by Ruby herself, ","bb17f0c93adf5d41a0dbbc1a754609f9":"who was full of sympathy for the poor animal, and she spoke: \"Thusly I do grant you the power to be the doge you want to be. ","21d08d27673431b670584aaf416ea42f":"No longer shall you be a Dog, but you shall be a Singleton Doge. \n","a6909bf78e68a55d2880b64edd564e48":"And so was created a new class,","6c7739ede35a65b541ff0cdc7f89fe0b":" a singleton class of doge. But if doge called the method `class`, he knew himself still as a Dog; it was only when he called the method `singleton_class`, that he knew where it was he got his uniquely doge abilities.\n \nOnly Ruby knew that, deep in the primordial C[haos], ","45eafd216328299a5475e6e8a688838a":"doge's true klass, was its singleton class.\n\nAs it happened, naturally, Dog, the class, now had a problem. ","3df21452bbc6a23df1fb85a1d9800e0d":"He prayed to Ruby, \"The programmers want me to keep track of all my Dog instances and find them by their name. But I can't do that with normal instance methods! I need class methods!\" And Ruby, remembering what she had granted doge, saw a similar solution here, and spoke, \"Thusly I do grant you the power to have methods of your own, and not just methods that all classes possess\".\n\n","2ed4ca91bffbb68daccfdcad17cc4a8f":"And so she wrought a ","a224e72f02f55e5460320df3b6c7df57":"singleton class for Dog, and because Dog himself was a class, this singleton class was like a class of a class, and Ruby christened it a metaclass, to set it apart from the singleton classes of normal objects like doge. And in creating the Dog metaclass, \n","7e1bc42dac7839cf56c7fa025ad0a0c4":"Ruby had to create the Class metaclass, and ","1fee3d72fe28540af1fb16eab4409240":"Module metaclass, and ","11e6734f99230391c97d4dcc4bdbac8b":"Object metaclass, and ","f9fb070a08277419e5d13983f44c2672":"BasicObject metaclass, and she decided to mirror the original genealogy, so that it was as if the BasicObject metaclass had begot the Object metaclass, and so on. And because it's really fun to have arrows flying all over the place","a9445a52b269aaa492cf99ab9a714bdd":", she made it such that Class begot the BasicObject metaclass.\n\nAnd so it was that the objects and their singleton classes and their metaclasses were finally happy, though now their world had been very much complicated, and every so often one of the metaclasses was wont to cause mischief,","c4911b11ad63e3c18eb6d0e361743e72":" demanding that they have their own metaclass. And that metametaclass would be even more mischievious, ","f16c19059e37490866f17bdd1bf22b21":"and demand their own metaclass, and on and on would these metametametaclasses go, ","5ef08af25bf392d94564c30de9825160":"till no one could even see where the whole thing ended, and the ordinary objects and classes just rolled their eyes and carried on with their day-to-day, oblivious to all this meta-madness.\n\n","d0c404a4d3fe492de0e5062332c10a97":"And this is where my Ruby Creation Story ends. So hopefully that was able to give you a sort of grand, schematic overview of Ruby's object model, in a fun way.\n\nAnd now...DUN DUN DUN, it's time for","0e8a4dcfe5ec43e9d85e11209e67d1e8":" MOAAAR! \n\n","4b5648756042c177b32ebaf7156f7e1f":"So, as they always say, in Ruby all data is represented as objects. Doge is an object, and Dog, which is a class, is also an object.\n\n","efd5a3df11b4d6ca72d4febcc3a8ea57":"So when I say that all data in Ruby is an object, what this translates to, in the C source, is every bit of ruby data being represented as pointers to structs. So a pointer is like this arrow over here, pointing to a value at some memory address, in this case a struct; and a struct is  just a bag of attributes, or I'll also call them members. Now the question is, what's actually in the struct?\n\nSo this is where I'm going to show you some actual C code. And just to note also that all the code I'm showing is from the ruby 2.4 branch.\n\n","0da3b98556d315ab3d60d87159dac9cd":"So, objects are represented as structs. And there are 3 structs that we'll primarily be interested in. The first is the struct that represents normal instance objects, RObject, and the second is the struct that represents class objects, RClass. And you notice that both these structs actually store another kind of struct in them, which is RBasic.\n\n","9f50d1ce0569747dba0adde760a78c9f":"Let's look at RBasic first, which stores basic information that every object has.\n\nSo you see that we're storing some flags, which is kinda like metadata of the object. So whether this object is a normal instance object, or is a class, or module, we actually store that in flags. And also whether or not my object is a singleton class, we store that in flags.\n\nAnd then more importantly, for us, is this klass, klass with the k, member. This is how we actually keep track of the 'true' class of our object, and this is one major thing we care about in figuring out our object model.\n\n","a5612c88c87bffa161beb160c4295671":"Now RObject isn't really much more. It's just RBasic plus this union thing here, which suffice to say is for storing our instance variables \n","6e71adc0234d95ad28f46f1e21577a76":"And finall, RClass. Again, it also stores an RBasic struct, so it has flags and klass. It also very importantly stores super, and that's the reference to the superclass of this class. Here there's a pointer to a ruby class extension struct, which we won't worry about (but I should mention, since classes are also objects, so they also have instance variables, and those are stored in this extension struct), and here is a pointer to a method table, and this is the table that's looked up during method dispatch.\n\n","d33c640e94ee8f471c392b387a7a1820":"So, this is the core of method dispatch right here,\n(pause, click)\n Basically keep searching the method tables of your class and then your super classes until you find something. \nSo if doge called the method 'class', \n(pause, click)\n this is the chain of RClass structs whose method tables we would be searching. \n(pause)\nExcept not quite. There's a bit of a complication here from Kernel, which is a module included in Object and not actually its superclass, but somehow it still sort of finds its way into this super chain here. \n\nAnd we'll actually see why, more clearly, when we talk about how modules work under the hood later on.\n\n","585f3ffa5cc72f7146478a414dcea31f":"So we've laid the basic groundwork, we've seen the C structs that Ruby uses to represent our data. So now the question is where does it all begin? Where does our creation myth start?\n\n","c058de78d93e1611bce800363138d535":"Yet to keep the peace, I cannot make this obvious, for if I do Dog will be jealous.\" ","3065deadcc1fc0944d95f99d87f951e2":"And you'll find it in the `InitVM_Object` function in `object.c`. And you see that it's calling `init_class_hierarchy` here, and this function, ","8cf4d74a82602c5a8747de449617dddc":"is actually where our class hierarchy gets bootstrapped. So after these `boot_defclass` functions get called, \n(click)\nour class hierarchy grows like this. \n\nAnd here with `RBASIC_SET_CLASS` we're saying, the class of BasicObject, Object, Module, and Class, is Class,\n(click)\n and we get all these nice arrows. \n\n","3b56a6bd8e5fa85e97261a21230f28b7":"And you may be wondering, what about `Kernel`?\n","cdcca2b8ef238cf12807cee44a764334":" So if we go back to `InitVM_Object`, which is a huge method. But you will see here that we define the module `Kernel` and include it in `Object`.","861b1414a91d1399d277a88359ef93c9":"And what you get after this is basically this schematic that you saw from the creation myth before; in addition to this genealogy of ancients (laser pointer?) Ruby also initializes all the built-in classes like Nil, and String and so on. Now the next interesting question is, what happens (click) when I define my own class? (click)\n\n","33badf87129fa43968ad521a2b372d20":"So let's say you define a class, Dog. This will end up calling the C function `rb_define_class_id`, which you see here. You can ignore the id thing, but there are basically 3 things going on here:\n(click)\n first, if the superclass wasn't explicitly specified, set super to `Object`. \n(click)\nSecond, actually initialize the class with the given super. Importantly, this sets up the superclass of our class, as well as the klass of our class, which is Class with the capital C. \n(click)\nAnd thirdly, we actually create the metaclass of our class straightaway.\n\n","790900c4655123506adb17018a0e6d29":"Now before jumping into any of that metaclass stuff, what you have is basically something like this. Seems simple enough, but this is like the breather before we jump into the madness of metaclasses.\n\n","6070dfff04462f9a48cf66fb97e0ed49":"Now before I move on to metaclass creation, terminology, terminology:\n\n(click)\nSingleton class is synonymous with eigenclass, and\n Basically a metaclass *is* a kind of singleton class. And all objects can have singleton classes, right. But there are a special group of objects that are also *classes*, like Dog here, or Class, or Module. \n\nAnd to differentiate between the singleton classes of normal objects like doge, and the singleton classes of class objects like Dog, we call the singleton classes of class objects metaclasses, because they are basically classes of classes. \n\n","bfea9d70780f82459447d7bc7fd85c02":"Now since singleton classes are themselves classes, as we've seen we can have singleton classes of singleton classes. So you can have metametaclasses, metametametaclasses, in general meta^(n)classes, although pretty much any n greater than 1 is not practically useful at all. It's just fun to realize that Ruby's object model actually allows you to do this.\n\n","31f6a86792f725378255fbf1c62da43f":"Ok, so get ready, because this is where we jump into the metaclass stuff.\n\nAnd Boromir knows well: one does not simply make a metaclass.\n","fb79bdb2db3ad745fa069d8ca8cf61db":"So let's look at the make_metaclass function, and break it down conceptually.\n(click)\nStep one: create a new RClass struct, and set its singleton flag. \n(click)\nStep two: we actually set the metaclass of Dog, to this newly created RClass struct. But we also try to set the klass pointer, klass with the k, to...what? This ENSURE_EIGENCLASS thing here, we'll see what that is in a second.\n(click)\nAnd step three:\nWe set the super of the new metaclass to, again...what? Something to do with ENSURE_EIGENCLASS again \n\n\n","08b7fac39eeebee8b094b25b79a7996d":"So let's try to see what happens, schematically, when our function has executed up to this point, just before that funny ENSURE_EIGENCLASS thing.","c53ad0b761d83df41f97be910e90d84a":"Basically we have our new Dog Singleton Class, and it is now the class of Dog. But then the question is what's the class of our Dog Singleton class?","6c4ff378312e128f5b6e872f39e8bad0":"This is where our ensure_eigenclass T,M,P, temp, comes in","b1d9ed635db60c89b993c99cd54fc87e":"tmp, is whatever Dog's class was, BEFORE it was set to the new metaclass.\n\nand ensure_eigenclass(tmp) basicaly calls make_metaclass on tmp, in other words, it calls make_metaclass on Class with the capital C, which was Dog's original class.","b7844ea71804ae78a6c9c61a1b0bf99d":"So now in the midst of making a Dog metaclass, we have to make a Class metaclass.\n\nAnd for Class, we execute the first branch of this if else, So the Class metaclass is created, and we set the class of the Class metaclass, to itself","75273339966383d1dc0405bf9b42c441":"So, this arrow looping back on itself. But then the next question is, what's the super of the Class metaclass?","69b0d4c5bd1d2abd982ceb5a8aab1f13":"This is step 3 of the make_metaclass method, and we see ensure eignclass again, but now it's ensure eigenclass super.\n\nWhat this means is a tongue twister: The superclass of Class's metaclass, is the metaclass of Class's superclass.","e10e11c990eb842f400ceadc59e96754":"So we call make_metaclass(Module)\n\nBut now what's the super of Module's metaclass?","8e2491ea0dac3710a94307c416f23072":"We have to call make_metaclass(Object), and so on","db816c49d92d2e36b7118369768e673f":"till we hit BasicObject, and the question is now, what's the super of the BasicObject metaclass?","ae367da2edd8f57177ca82993f23dead":"As it turns, out, it's just Class","e1288f495b8512084483b1bfea5a4af5":"And finishing up the make_metaclass(Dog) function, we have to set the super of our Dog metaclass, which will be the metaclass of Dog's superclass.","55f42e8c265d65727be19a4d20e97994":"So the Object metaclass.\n\nCongratulations!! All we wanted to do, was to create a Dog class, but we ended up spawning 5 other classes and a gazillion arrows along the way. Boromir was right.\n\nAnd you're like, Oh my god, all this metaclass stuff is insane. But fret not, because after this","e93f3353e6670aae8c453432ef1cfda3":"creating normal singleton classes is like the proverbial walk in the park.","4351915cd733872218a6f102c648c1c9":"What a delightfully short function!\n\nAgain, 3 steps:\n(click)\nStep 1: create the new RClass struct for our singleton class, whose super is the original class of our object, so that our super chain for method dispatch is still intact.\n(click)\nStep 2: Set the klass pointer of our object to our new singleton class\n(click)\nStep 3: Set the klass pointer of our new singleton class to the Class metaclass.","df170c4fb0fa587c421473912d4abef8":"So what you get in the end is something like this. Pretty much where our creation myth ended off.\n\nBut, you realize that we're still missing one big thing from Ruby object model, which is: ","6ee3938f6d81bdeb919407fb9ea75847":"Time to retell the creation myth through the lens of CRuby source","c0ddd63e9b6c7f067b845cdb0793464e":"modules. So how does including modules work? And the answer is that Ruby finds a pretty clever way of sneaking our modules into our inheritance chain,  with something called *include classes*.\n\n","e305b72245ffa46152d03cbc1b5742e1":"So you want to give doge some saberteeth, and you \n(click)\ninclude a Saberteeth module.\n\nWhat happens when you do this, is that Ruby \n(click)\ncreates a special kind of class called an include class, with the \n(click)\nsame method table as the module itself, and basically inserts it into our inheritance chain here; \n\nso the actual superclass of Dog is now this include class here, though we can't actually see this from Ruby. And in this way method dispatch just works like normal, we just go up the inheritance chain.\n\n","384323e92be8607a8f09059c08fdc12a":"Now the bulk of this module inclusion logic, is actually in this really hefty `include_modules_at` function, \n\nbut here is the key part where we create our include class and insert it into our inheritance chain by calling RCLASS_SET_SUPER. \n\n\n","48bcc440fa5a8a220f092a13861d3399":"Now because include classes are just RClass structs, they also have a `klass` pointer and a `super` pointer. And we know the `klass` of our Saberteeth module, is just Module. But the klass of our Saberteeth include class, is actually Saberteeth, and that's how the include class keeps track of the module it's created from.\n\n","e894e835be2c06b46485f6707a551bc2":"But we know saberteeth alone aren't kickass enough. So let's give Doge some sunglasses as well.\n\nAnd because the included_modules_at function is called every time an include statement is evaluated, based on the logic of how include classes are inserted into the inheritance chain, the module that was included later is lower down the chain; that is, we search its method table first.","7acc8f1746c5767678c614ccc8053f4e":"Now let's complicate things a little. What about including \n(click)\nmodules in modules? ","1928491ea4cb31116e01f5dccb84483d":"Well, since modules and include classes are also RClass structs, they also have a super pointer.","0649443eead86fa5e1fe6aefdde6a33d":"But maybe you're like, wait, can modules actually have a super?\n(click)\nWell, yes, but not by default. By default the super pointer is NULL.\n(click)\nBut super comes in handy when we include modules in modules","52ba522d4c050bc2b8b796f7defc91e8":"So instead of a doge with saberteeth and sunglasses, I want a doge with saberteeth sunglasses. So Sabersunglass doge. How cool is that.","88ff53938d1de66252d0428121065727":"So, we include Saberteeth in the Sunglasses module.\n(click)\nThis results in the creation of a Saberteeth include class, which the `super` of our Sunglasses module now points to. \n(click)\nAnd now when you finally include Sunglasses into Dog, you get two include classes snuck into the inheritance chain, just like this.\n\n","cb97c065389eda2c3c86e01dcec11311":"So awesome, I am approaching the end of my talk, and we've covered a lot of ground. We talked about objects, classes, superclasses, singleton classes, metaclasses, modules, all the core bits of Ruby's object model. But before I start wrapping up, I would be remiss not to clarify this final point","8f9e8148dd6942b3f3d7b499817c3703":": the differences between the C klass and super pointers, and the Ruby class and superclass methods.\n\n","c817e3e1e6fce0bf96c712e9b69c976f":"Basically Ruby's class method looks up the klass with the k pointer, but ignores any singleton classes and include classes.","a37b75e6760cbc2c1ee085d306b7b8e5":"While Ruby's superclass method follows the super pointer, but ignores any include classes.\n\nSo maybe at this point you're like, uuhhh yea all this under the hood, internal stuff, it's fun to know, ","0ff5e9a4b7fc9c4c34185c8d576d9f68":"but, why?\n it doesn't really help me become a better Ruby programmer in my day-to-day or anything.. And well, yea, maybe that's true to a certain extent; knowing that I can create metametametametametametaclasses really isn't particularly helpful. But I'd like to think that having a solid understanding of Ruby's object model will help you reason more clearly about your code\n\n","eedd68bdacaae0d3dcf0566896828a24":"So when you encounter potentially (click, click, click) confusing situations like this, well, there's no need for me to go through all this, not just because I don't have the time left, but also because, you, now have an awesome mental model to figure it out all by yourself.","312d38c1fc5ee1af30eeaf36611da761":"The mental model I wish I had starting out....","751d5377aad1df1fe772198b6557b35a":"AND MOOOAR","6cb5cfd434c586091808911e49d34fb8":"So thank you :D"}}};


			// Use local fonts
			SLConfig.fonts_url = 'lib/fonts/';
		</script>

		<script src="lib/head.min.js"></script>
		<script src="lib/reveal.min.js"></script>
		<script src="lib/offline.js"></script>

		<!-- Initialize the presentation -->
		<script>
			Reveal.initialize({
				width: 960,
				height: 700,
				margin: 0.05,

				controls: true,
				progress: true,
				history: true,
				mouseWheel: false,
				showNotes: false,
				slideNumber: false,

				autoSlide: 0 || 0,
				autoSlideStoppable: true,

				center: false,
				loop: false,
				rtl: false,

				transition: "fade",
				backgroundTransition: "fade",

				dependencies: [
					{ src: 'lib/reveal-plugins/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'lib/reveal-plugins/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'lib/reveal-plugins/highlight/highlight.js', async: true, callback: function() { hljs.initHighlighting(); hljs.initHighlightingOnLoad(); } },
					{ src: 'lib/reveal-plugins/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
				]
			});
		</script>

		

	</body>
</html>
